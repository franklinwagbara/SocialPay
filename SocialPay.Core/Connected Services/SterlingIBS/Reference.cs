//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SterlingIBS
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SterlingIBS.IBSServicesSoap")]
    public interface IBSServicesSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBSBridge", ReplyAction="*")]
        System.Threading.Tasks.Task<SterlingIBS.IBSBridgeResponse> IBSBridgeAsync(SterlingIBS.IBSBridgeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBSBridgeNE", ReplyAction="*")]
        System.Threading.Tasks.Task<SterlingIBS.IBSBridgeNEResponse> IBSBridgeNEAsync(SterlingIBS.IBSBridgeNERequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IBSBridgeRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IBSBridge", Namespace="http://tempuri.org/", Order=0)]
        public SterlingIBS.IBSBridgeRequestBody Body;
        
        public IBSBridgeRequest()
        {
        }
        
        public IBSBridgeRequest(SterlingIBS.IBSBridgeRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class IBSBridgeRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string request;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Appid;
        
        public IBSBridgeRequestBody()
        {
        }
        
        public IBSBridgeRequestBody(string request, int Appid)
        {
            this.request = request;
            this.Appid = Appid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IBSBridgeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IBSBridgeResponse", Namespace="http://tempuri.org/", Order=0)]
        public SterlingIBS.IBSBridgeResponseBody Body;
        
        public IBSBridgeResponse()
        {
        }
        
        public IBSBridgeResponse(SterlingIBS.IBSBridgeResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class IBSBridgeResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string IBSBridgeResult;
        
        public IBSBridgeResponseBody()
        {
        }
        
        public IBSBridgeResponseBody(string IBSBridgeResult)
        {
            this.IBSBridgeResult = IBSBridgeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IBSBridgeNERequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IBSBridgeNE", Namespace="http://tempuri.org/", Order=0)]
        public SterlingIBS.IBSBridgeNERequestBody Body;
        
        public IBSBridgeNERequest()
        {
        }
        
        public IBSBridgeNERequest(SterlingIBS.IBSBridgeNERequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class IBSBridgeNERequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string request;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Appid;
        
        public IBSBridgeNERequestBody()
        {
        }
        
        public IBSBridgeNERequestBody(string request, int Appid)
        {
            this.request = request;
            this.Appid = Appid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IBSBridgeNEResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IBSBridgeNEResponse", Namespace="http://tempuri.org/", Order=0)]
        public SterlingIBS.IBSBridgeNEResponseBody Body;
        
        public IBSBridgeNEResponse()
        {
        }
        
        public IBSBridgeNEResponse(SterlingIBS.IBSBridgeNEResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class IBSBridgeNEResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string IBSBridgeNEResult;
        
        public IBSBridgeNEResponseBody()
        {
        }
        
        public IBSBridgeNEResponseBody(string IBSBridgeNEResult)
        {
            this.IBSBridgeNEResult = IBSBridgeNEResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IBSServicesSoapChannel : SterlingIBS.IBSServicesSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class BSServicesSoapClient : System.ServiceModel.ClientBase<SterlingIBS.IBSServicesSoap>, SterlingIBS.IBSServicesSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BSServicesSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(BSServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), BSServicesSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BSServicesSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BSServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BSServicesSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BSServicesSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BSServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SterlingIBS.IBSBridgeResponse> SterlingIBS.IBSServicesSoap.IBSBridgeAsync(SterlingIBS.IBSBridgeRequest request)
        {
            return base.Channel.IBSBridgeAsync(request);
        }
        
        public System.Threading.Tasks.Task<SterlingIBS.IBSBridgeResponse> IBSBridgeAsync(string request, int Appid)
        {
            SterlingIBS.IBSBridgeRequest inValue = new SterlingIBS.IBSBridgeRequest();
            inValue.Body = new SterlingIBS.IBSBridgeRequestBody();
            inValue.Body.request = request;
            inValue.Body.Appid = Appid;
            return ((SterlingIBS.IBSServicesSoap)(this)).IBSBridgeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SterlingIBS.IBSBridgeNEResponse> SterlingIBS.IBSServicesSoap.IBSBridgeNEAsync(SterlingIBS.IBSBridgeNERequest request)
        {
            return base.Channel.IBSBridgeNEAsync(request);
        }
        
        public System.Threading.Tasks.Task<SterlingIBS.IBSBridgeNEResponse> IBSBridgeNEAsync(string request, int Appid)
        {
            SterlingIBS.IBSBridgeNERequest inValue = new SterlingIBS.IBSBridgeNERequest();
            inValue.Body = new SterlingIBS.IBSBridgeNERequestBody();
            inValue.Body.request = request;
            inValue.Body.Appid = Appid;
            return ((SterlingIBS.IBSServicesSoap)(this)).IBSBridgeNEAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IBSServicesSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.IBSServicesSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IBSServicesSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://10.0.41.102:818/IBSServices.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.IBSServicesSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://10.0.41.102:818/IBSServices.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            IBSServicesSoap,
            
            IBSServicesSoap12,
        }
    }
}
