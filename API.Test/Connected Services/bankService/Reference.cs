//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace bankService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="bankService.banksSoap")]
    public interface banksSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FormInternalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> FormInternalAccountAsync(string companycode, string currency, string ledcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchCustomerByBvn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> SearchCustomerByBvnAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchCustomerByMobilePhone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> SearchCustomerByMobilePhoneAsync(string mobilePhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchAccountsByCategoryCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> SearchAccountsByCategoryCodeAsync(string retrievalValue, string categoryCode, string currency, bool isRetrievalValueACustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomerStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateCustomerStatusAsync(string customerid, string customerstatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByBVNAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByBVN_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByBVN_NewAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByMobileNo2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByMobileNo2Async(string mobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLastNTransactionRoutine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLastNTransactionRoutineAsync(string nuban, int NoRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetAccountDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24CAMGetAccountDetailsAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetTransactionHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24CAMGetTransactionHistoryAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AmountLockwithoutDateNarration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AmountLockwithoutDateNarrationAsync(string account, decimal amt, string narration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatialUnLockAmountWithRemark", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PatialUnLockAmountWithRemarkAsync(string id, string amount, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceStandingOrderWithEnddateAndRemarks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PlaceStandingOrderWithEnddateAndRemarksAsync(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency, string enddate, string paymentDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CorpCustomerCreation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> CorpCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceRestrictionDeposits", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PlaceRestrictionDepositsAsync(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveRestrictionDeposits", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RemoveRestrictionDepositsAsync(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMTrxnDetailByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetATMTrxnDetailByIDAsync(string transactionid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFundsTransferDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetFundsTransferDetailsAsync(string ftref, bool historysearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductBalanceToday", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetProductBalanceTodayAsync(string categoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlCategoryBalanceForToday", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<decimal> GetPlCategoryBalanceForTodayAsync(string plCategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLockedEventsHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLockedEventsHistoryAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLockedEvents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetLockedEventsAsync(string atUniqueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLockedEventsLive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLockedEventsLiveAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAccountTitle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateAccountTitleAsync(string acctno, string acctname, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDAOOfficer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateDAOOfficerAsync(string acctno, string dao, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCCRNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetKYCCRNumberAsync(string cusnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetKYCDetailsAsync(string CRnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> updateCustomerAsync(string updateFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/nipInwardCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> nipInwardCheckAsync(string accountNumber, string amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getEbContractBalancesBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string[]> getEbContractBalancesBalanceAsync(string acctNum, string oracleConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateDAO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CreateDAOAsync(string DEPT_ACCT_OFF_CODE, string AREA, string NAME, string DELIVERY_POINT, string DEPT_LEVEL, string DEPT_PARENT, string STAFF_ID, string STF_EFF_DATE, string DEPARTMENT, string STATUS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MapDaoToAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MapDaoToAccountAsync(string acctnum, int daocode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDaoInfoForCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetDaoInfoForCustomerAsync(string customerid, int searchLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatesStaffCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> CreatesStaffCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateIndividualCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> CreateIndividualCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCorporateCustomer2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> CreateCorporateCustomer2Async(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    string Incorpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state, 
                    string place, 
                    string nature, 
                    string stateresidence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAssociationCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> CreateAssociationCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string Incorpdate, 
                    string sms, 
                    string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> CreateAccountAsync(string customerid, string productcode, string currency, string dt, string branch, string PND, string dao, string acctName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBvn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetBvnAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Concession", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ConcessionAsync(string acctnumber, string Rate, string covenant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PerformPostingRestrictionOperation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> PerformPostingRestrictionOperationAsync(string acctnum, string bracode, string curcode, int restrictionCode, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateInternalAcct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CreateInternalAcctAsync(string customerid, string categorycode, string currency, System.DateTime dt, string branch, string dao, string shorttitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getRelationshipManagerDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getRelationshipManagerDetailsAsync(string daoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/generateTillAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> generateTillAccountAsync(string tellerId, string branchCode, string currencyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetCustomerDetailsAsync(string customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateCustomerAsync(string customerid, string surname, string middlename, string firstname, string address, string sector, string target, string status, string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerMandateNoSignatory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SaveCustomerMandateNoSignatoryAsync(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerMandate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SaveCustomerMandateAsync(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomerMandate2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SaveCustomerMandate2Async(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Customer_Update_String", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Customer_Update_StringAsync(
                    string customerid, 
                    string fullname1, 
                    string fullname2, 
                    string shortName, 
                    string accountOfficer, 
                    string sector, 
                    string industry, 
                    string target, 
                    string customerStatus, 
                    string residence, 
                    string nationality, 
                    string customerType, 
                    string language, 
                    string birthOrIncorporationDate, 
                    string mnemonic, 
                    string street, 
                    string address, 
                    string townCountry, 
                    string postCode, 
                    string country, 
                    string phone1, 
                    string sms1, 
                    string email, 
                    string officePhone, 
                    string fax, 
                    string stateResidence, 
                    string addressLandmark, 
                    string legalID, 
                    string legalDocName, 
                    string legalHolderName, 
                    string legalIssuingAuth, 
                    string legalIssueDate, 
                    string legalExpDate, 
                    string legalCountryOfIssue, 
                    string taxId, 
                    string bvn, 
                    string nin, 
                    string scumlNum, 
                    string customerSince, 
                    bool isPep, 
                    string pepDescription, 
                    bool isIssueCheques, 
                    string nextOfKinName, 
                    string nextOfKinEmail, 
                    string nextOfKinPhone, 
                    string rcNumber, 
                    string placeOfRegistration, 
                    string natureOfBusiness, 
                    string employerPhone, 
                    string employerName, 
                    string employerAddress, 
                    string jobTitle, 
                    char gender, 
                    string title, 
                    string customerRiskRating_calculated, 
                    string customerRiskRating_Manual, 
                    string dateOfBirth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Customer_Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.Customer_UpdateResponse> Customer_UpdateAsync(bankService.Customer_UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPresentedCheque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getPresentedChequeAsync(string chequeNumber, string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStoppedCheque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getStoppedChequeAsync(string chequeNumber, string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAllFields", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAllFieldsAsync(string customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveReferee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SaveRefereeAsync(string customerID, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Account_AddCo_Owner", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Account_AddCo_OwnerAsync(string accountNumber, string acctBranch, string co_Owner_CustId, string co_Owner_Role, string action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductChange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateProductChangeAsync(System.DateTime effectiveDate, string newproductId, string accountnumber, string acctDomiciledBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHvtStatement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetHvtStatementAsync(string accountnumber, System.DateTime startdate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Customer_UpdateResidenceStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Customer_UpdateResidenceStatusAsync(string customerid, string residencestatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateDepositPayoutAccounts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateDepositPayoutAccountsAsync(string depositArrangementid, System.DateTime effectiveDate, string principalPayoutAcct, string interestPayoutAcct, string chargePayoutAcct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInvestmentDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetInvestmentDetailsAsync(string investmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetFixedInterestRateOnLoan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SetFixedInterestRateOnLoanAsync(string arrangementID, System.DateTime effectiveDate, decimal fixedRate, string propertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeFloatingKeyInterestRateOnLoan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ChangeFloatingKeyInterestRateOnLoanAsync(string arrangementID, System.DateTime effectiveDate, int floatingKey, decimal marginRate, bool isIncreaseAboveKeyOrBelowKey, string propertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAuthorizedMt202", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetAuthorizedMt202Async(string branch, string t24UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUnauthorizedMt202", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetUnauthorizedMt202Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHvtAccountBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetHvtAccountBalanceAsync(string accountnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CloseAccountAsync(string closeThisAccount, string moveBalanceToThisAccount, System.DateTime effectiveBankingDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PutRestrictionForInternalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PutRestrictionForInternalAccountAsync(string acctno, string restcode, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MnemonicForInternalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MnemonicForInternalAccountAsync(string acctno, string restcode, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStatement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getStatementAsync(string nuban, System.DateTime sdate, System.DateTime edate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Customer_Update_Pep_Rating", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Customer_Update_Pep_RatingAsync(string customerid, string customerPepRating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeAccountBranch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ChangeAccountBranchAsync(string accountnum, string destinationBranch, System.DateTime effectiveDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetManagerChequeDetailsByDraftNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetManagerChequeDetailsByDraftNumberAsync(string draftNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChequeIssue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ChequeIssueAsync(string accountnumber, string prefixForChequeIssueId, string chequeIssueStatus, System.DateTime issueDate, int numberIssued, string firstChequeSerialNumber, string stockRegisterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24SingleTxnRequeryInward", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> T24SingleTxnRequeryInwardAsync(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24SingleTxnRequeryInwardRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> T24SingleTxnRequeryInwardRefAsync(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24SingleTxnRequeryOutward", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> T24SingleTxnRequeryOutwardAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24NIPOUTWARDTxnRequery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> T24NIPOUTWARDTxnRequeryAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24NIPOUTWARDTxnRequeryForAutoReversal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ReversalFT[]> T24NIPOUTWARDTxnRequeryForAutoReversalAsync(string transaction_ref, string DEBIT_ACCOUNT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24NIPOUTWARDTxnRequeryRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> T24NIPOUTWARDTxnRequeryRefAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnblockUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UnblockUserAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getT24UserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getT24UserIDAsync(string tell_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getT24UserID2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getT24UserID2Async(string signonname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsHoliday", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> IsHolidayAsync(string sdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBankTellerID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getBankTellerIDAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MandateRetrieval", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> MandateRetrievalAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LockAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> LockAmountAsync(string accountNo, System.DateTime sDate, System.DateTime eDate, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnLockAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UnLockAmountAsync(string lockId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BlockAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> BlockAccountAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UnBlockAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UnBlockAccountAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CustomerPortfolio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CustomerPortfolioAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStateOfBranch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetStateOfBranchAsync(string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCategoryAsync(string categorycode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionReQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTransactionReQueryAsync(string accountNo, System.DateTime transdate, string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionReQueryforNibbs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTransactionReQueryforNibbsAsync(string tid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionReQueryByRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTransactionReQueryByRefAsync(string accountNo, System.DateTime transdate, string refId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateBVNAsync(string customrId, string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/accountopeningforexistingcustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> accountopeningforexistingcustomerAsync(string customerid, string productcode, string currency, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIndustries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetIndustriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSectors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetSectorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCategories", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTargets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetTargetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerStatusList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetCustomerStatusListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetBranchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOldBranchCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetOldBranchCodeAsync(string branchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBankDetailsBySortCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getBankDetailsBySortCodeAsync(string sortcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBankDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getBankDetailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAllProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountByProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAccountByProductAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/isSMSSubscriber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> isSMSSubscriberAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTellerLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTellerLimitAsync(string Tellerid, string branchcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerDeposit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerDepositAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPaymentDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getPaymentDetailAsync(string nuban, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTransactionDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTransactionDetailAsync(string nuban, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTotalTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTotalTransactionAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checktAccountforRestriction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> checktAccountforRestrictionAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTellerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTellerInfoAsync(string tellerId, string branchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCheque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getChequeAsync(string nuban, string chequeNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLoanSchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLoanScheduleAsync(string arrangementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLoanInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLoanInfoAsync(string arrangementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountFullInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAccountFullInfoAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountFullInfo_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAccountFullInfo_NewAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountFullInfoByAppID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAccountFullInfoByAppIDAsync(string nuban, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomrInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomrInfoAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomrInfoByAppID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomrInfoByAppIDAsync(string customerId, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getIndivCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getIndivCustomerAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAddressAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerContacts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerContactsAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerPartys", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerPartysAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerId_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByCustomerId_NewAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByCustomerIdAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerId2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByCustomerId2Async(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByCustomerIdbyAppID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByCustomerIdbyAppIDAsync(string customerId, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCustomerAccountsByMobileNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByMobileNoAsync(string mobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getProductByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getProductByCodeAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrencies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCurrencyByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCurrencyByCodeAsync(string currencyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCompanies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCompanyByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCompanyByCodeAsync(string companyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCompanyByLocation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCompanyByLocationAsync(int locationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRegions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetRegionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSortCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetSortCodesAsync(string bankcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStatementV1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getStatementV1Async(string nuban, System.DateTime sdate, System.DateTime edate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStatementByAppID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getStatementByAppIDAsync(string nuban, System.DateTime sdate, System.DateTime edate, string appid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBalances", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getBalancesAsync(string nuban, System.DateTime sdate, System.DateTime edate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLastNTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLastNTransactionAsync(string nuban, int NoRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getActiveLoans", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getActiveLoansAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getSbnReadLoanOrAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getSbnReadLoanOrAccountAsync(string customerid, string productLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetIndivCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetIndivCustomerAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetCustomerAccountAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetCustomerAddressAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerContact", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetCustomerContactAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetCustomerPartys", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetCustomerPartysAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24ACPGetAllCustomerInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetAllCustomerInfoAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetAccountDebitCredit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24CAMGetAccountDebitCreditAsync(string acct, System.DateTime sDate, System.DateTime eDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetAccountFullInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetAccountFullInfoAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCompanies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCompanyByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCompanyByCodeAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetLastNTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetLastNTransactionAsync(string nuban, int recordNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLastNTransactionRtn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetLastNTransactionRtnAsync(string nuban, string recordNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCustomerAccountsByBVNAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByCustomerId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCustomerAccountsByCustomerIdAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCustomerAccountsByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCustomerAccountsByMobileNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCustomerAccountsByMobileNoAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCurrencyByCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCurrencyByCodeAsync(string currencyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24GetCurrencies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/T24CAMGetCOTIncome", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24CAMGetCOTIncomeAsync(string acct, System.DateTime sDate, System.DateTime eDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AccountCreation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> AccountCreationAsync(string customerid, string productcode, string currency, string branch, string PND, string dao, string acctName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AmountLockwithoutDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AmountLockwithoutDateAsync(string account, decimal amt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StopChequePayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> StopChequePaymentAsync(string account, string chequeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PatialUnLockAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PatialUnLockAmountAsync(string id, string amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceStandingOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PlaceStandingOrderAsync(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IndvCustomerCreation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> IndvCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StaffAccountCreation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> StaffAccountCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AsscCustomerCreation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> AsscCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserLimit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> UserLimitAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveUserID2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RetrieveUserID2Async(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveUserID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RetrieveUserIDAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetATMDetailAsync(string stan, string retno, string authcode, string debitacct, string pan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ATMPassUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ATMPassUpdateAsync(string recid, string userid, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ATMParameterUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ATMParameterUpdateAsync(string recid, string userid, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateDAO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> ValidateDAOAsync(string daocode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInternalAcctStatement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetInternalAcctStatementAsync(string acct, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateIntroducer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateIntroducerAsync(string customer, string introducer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetATMTxnDateRange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetATMTxnDateRangeAsync(string debitaccount, System.DateTime startdate, System.DateTime enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAcctAltID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateAcctAltIDAsync(string AccountNo, string AltAccount, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountfromDByAccountNum2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetAccountfromDByAccountNum2Async(string acctnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountfromDByAccountNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetAccountfromDByAccountNumAsync(string acctnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountInfoByRoutine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetAccountInfoByRoutineAsync(string acctnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExistBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdateExistBVNAsync(string customerid, string Bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStatement1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getStatement1Async(string nuban, System.DateTime sdate, System.DateTime edate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceRestriction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PlaceRestrictionAsync(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoveRestriction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RemoveRestrictionAsync(string nuban, string restcode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOverdueReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetOverdueReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeriveInternalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DeriveInternalAccountAsync(string currency, string categoryCode, string sequency, string companyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getInternalAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> getInternalAccountAsync(string companyCode, string currency, string categoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendEmailAsync(string destinationEmail, string sourceEmail, string body, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAcctInfoByNubanandPhone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAcctInfoByNubanandPhoneAsync(string nuban, string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LockAmountWithReason", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bankService.LockAmountWithReasonResponse> LockAmountWithReasonAsync(bankService.LockAmountWithReasonRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ReversalFT
    {
        
        private string transactTypeField;
        
        private string fTReferenceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TransactType
        {
            get
            {
                return this.transactTypeField;
            }
            set
            {
                this.transactTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FTReference
        {
            get
            {
                return this.fTReferenceField;
            }
            set
            {
                this.fTReferenceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Customer_Update", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Customer_UpdateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string customerid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string fullname1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string fullname2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string shortName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string accountOfficer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string sector;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string industry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string target;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string customerStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public string residence;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string nationality;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public string customerType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string language;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> birthOrIncorporationDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public string mnemonic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public string street;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public string address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public string townCountry;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=18)]
        public string postCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=19)]
        public string country;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=20)]
        public string phone1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=21)]
        public string sms1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=22)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=23)]
        public string officePhone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=24)]
        public string fax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=25)]
        public string stateResidence;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=26)]
        public string addressLandmark;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=27)]
        public string legalID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=28)]
        public string legalDocName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=29)]
        public string legalHolderName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=30)]
        public string legalIssuingAuth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=31)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> legalIssueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=32)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> legalExpDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=33)]
        public string legalCountryOfIssue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=34)]
        public string taxId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=35)]
        public string bvn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=36)]
        public string nin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=37)]
        public string scumlNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=38)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> customerSince;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=39)]
        public bool isPep;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=40)]
        public string pepDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=41)]
        public bool isIssueCheques;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=42)]
        public string nextOfKinName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=43)]
        public string nextOfKinEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=44)]
        public string nextOfKinPhone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=45)]
        public string rcNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=46)]
        public string placeOfRegistration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=47)]
        public string natureOfBusiness;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=48)]
        public string employerPhone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=49)]
        public string employerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=50)]
        public string employerAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=51)]
        public string jobTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=52)]
        public char gender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=53)]
        public string title;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=54)]
        public string customerRiskRating_calculated;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=55)]
        public string customerRiskRating_Manual;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=56)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateOfBirth;
        
        public Customer_UpdateRequest()
        {
        }
        
        public Customer_UpdateRequest(
                    string customerid, 
                    string fullname1, 
                    string fullname2, 
                    string shortName, 
                    string accountOfficer, 
                    string sector, 
                    string industry, 
                    string target, 
                    string customerStatus, 
                    string residence, 
                    string nationality, 
                    string customerType, 
                    string language, 
                    System.Nullable<System.DateTime> birthOrIncorporationDate, 
                    string mnemonic, 
                    string street, 
                    string address, 
                    string townCountry, 
                    string postCode, 
                    string country, 
                    string phone1, 
                    string sms1, 
                    string email, 
                    string officePhone, 
                    string fax, 
                    string stateResidence, 
                    string addressLandmark, 
                    string legalID, 
                    string legalDocName, 
                    string legalHolderName, 
                    string legalIssuingAuth, 
                    System.Nullable<System.DateTime> legalIssueDate, 
                    System.Nullable<System.DateTime> legalExpDate, 
                    string legalCountryOfIssue, 
                    string taxId, 
                    string bvn, 
                    string nin, 
                    string scumlNum, 
                    System.Nullable<System.DateTime> customerSince, 
                    bool isPep, 
                    string pepDescription, 
                    bool isIssueCheques, 
                    string nextOfKinName, 
                    string nextOfKinEmail, 
                    string nextOfKinPhone, 
                    string rcNumber, 
                    string placeOfRegistration, 
                    string natureOfBusiness, 
                    string employerPhone, 
                    string employerName, 
                    string employerAddress, 
                    string jobTitle, 
                    char gender, 
                    string title, 
                    string customerRiskRating_calculated, 
                    string customerRiskRating_Manual, 
                    System.Nullable<System.DateTime> dateOfBirth)
        {
            this.customerid = customerid;
            this.fullname1 = fullname1;
            this.fullname2 = fullname2;
            this.shortName = shortName;
            this.accountOfficer = accountOfficer;
            this.sector = sector;
            this.industry = industry;
            this.target = target;
            this.customerStatus = customerStatus;
            this.residence = residence;
            this.nationality = nationality;
            this.customerType = customerType;
            this.language = language;
            this.birthOrIncorporationDate = birthOrIncorporationDate;
            this.mnemonic = mnemonic;
            this.street = street;
            this.address = address;
            this.townCountry = townCountry;
            this.postCode = postCode;
            this.country = country;
            this.phone1 = phone1;
            this.sms1 = sms1;
            this.email = email;
            this.officePhone = officePhone;
            this.fax = fax;
            this.stateResidence = stateResidence;
            this.addressLandmark = addressLandmark;
            this.legalID = legalID;
            this.legalDocName = legalDocName;
            this.legalHolderName = legalHolderName;
            this.legalIssuingAuth = legalIssuingAuth;
            this.legalIssueDate = legalIssueDate;
            this.legalExpDate = legalExpDate;
            this.legalCountryOfIssue = legalCountryOfIssue;
            this.taxId = taxId;
            this.bvn = bvn;
            this.nin = nin;
            this.scumlNum = scumlNum;
            this.customerSince = customerSince;
            this.isPep = isPep;
            this.pepDescription = pepDescription;
            this.isIssueCheques = isIssueCheques;
            this.nextOfKinName = nextOfKinName;
            this.nextOfKinEmail = nextOfKinEmail;
            this.nextOfKinPhone = nextOfKinPhone;
            this.rcNumber = rcNumber;
            this.placeOfRegistration = placeOfRegistration;
            this.natureOfBusiness = natureOfBusiness;
            this.employerPhone = employerPhone;
            this.employerName = employerName;
            this.employerAddress = employerAddress;
            this.jobTitle = jobTitle;
            this.gender = gender;
            this.title = title;
            this.customerRiskRating_calculated = customerRiskRating_calculated;
            this.customerRiskRating_Manual = customerRiskRating_Manual;
            this.dateOfBirth = dateOfBirth;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Customer_UpdateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Customer_UpdateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Customer_UpdateResult;
        
        public Customer_UpdateResponse()
        {
        }
        
        public Customer_UpdateResponse(string Customer_UpdateResult)
        {
            this.Customer_UpdateResult = Customer_UpdateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LockAmountWithReason", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LockAmountWithReasonRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string acct;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> sDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> eDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public decimal amt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string reasonForLocking;
        
        public LockAmountWithReasonRequest()
        {
        }
        
        public LockAmountWithReasonRequest(string acct, System.Nullable<System.DateTime> sDate, System.Nullable<System.DateTime> eDate, decimal amt, string reasonForLocking)
        {
            this.acct = acct;
            this.sDate = sDate;
            this.eDate = eDate;
            this.amt = amt;
            this.reasonForLocking = reasonForLocking;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LockAmountWithReasonResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LockAmountWithReasonResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string LockAmountWithReasonResult;
        
        public LockAmountWithReasonResponse()
        {
        }
        
        public LockAmountWithReasonResponse(string LockAmountWithReasonResult)
        {
            this.LockAmountWithReasonResult = LockAmountWithReasonResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface banksSoapChannel : bankService.banksSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class banksSoapClient : System.ServiceModel.ClientBase<bankService.banksSoap>, bankService.banksSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public banksSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(banksSoapClient.GetBindingForEndpoint(endpointConfiguration), banksSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public banksSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(banksSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public banksSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(banksSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public banksSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> FormInternalAccountAsync(string companycode, string currency, string ledcode)
        {
            return base.Channel.FormInternalAccountAsync(companycode, currency, ledcode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> SearchCustomerByBvnAsync(string bvn)
        {
            return base.Channel.SearchCustomerByBvnAsync(bvn);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> SearchCustomerByMobilePhoneAsync(string mobilePhone)
        {
            return base.Channel.SearchCustomerByMobilePhoneAsync(mobilePhone);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> SearchAccountsByCategoryCodeAsync(string retrievalValue, string categoryCode, string currency, bool isRetrievalValueACustomerId)
        {
            return base.Channel.SearchAccountsByCategoryCodeAsync(retrievalValue, categoryCode, currency, isRetrievalValueACustomerId);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCustomerStatusAsync(string customerid, string customerstatus)
        {
            return base.Channel.UpdateCustomerStatusAsync(customerid, customerstatus);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByBVNAsync(string bvn)
        {
            return base.Channel.getCustomerAccountsByBVNAsync(bvn);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByBVN_NewAsync(string bvn)
        {
            return base.Channel.getCustomerAccountsByBVN_NewAsync(bvn);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByMobileNo2Async(string mobileNo)
        {
            return base.Channel.getCustomerAccountsByMobileNo2Async(mobileNo);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLastNTransactionRoutineAsync(string nuban, int NoRecord)
        {
            return base.Channel.getLastNTransactionRoutineAsync(nuban, NoRecord);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24CAMGetAccountDetailsAsync(string nuban)
        {
            return base.Channel.T24CAMGetAccountDetailsAsync(nuban);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24CAMGetTransactionHistoryAsync(string nuban)
        {
            return base.Channel.T24CAMGetTransactionHistoryAsync(nuban);
        }
        
        public System.Threading.Tasks.Task<string> AmountLockwithoutDateNarrationAsync(string account, decimal amt, string narration)
        {
            return base.Channel.AmountLockwithoutDateNarrationAsync(account, amt, narration);
        }
        
        public System.Threading.Tasks.Task<string> PatialUnLockAmountWithRemarkAsync(string id, string amount, string remark)
        {
            return base.Channel.PatialUnLockAmountWithRemarkAsync(id, amount, remark);
        }
        
        public System.Threading.Tasks.Task<string> PlaceStandingOrderWithEnddateAndRemarksAsync(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency, string enddate, string paymentDetails)
        {
            return base.Channel.PlaceStandingOrderWithEnddateAndRemarksAsync(originatingaccount, beneficiaryaccount, amount, startdate, frequency, enddate, paymentDetails);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> CorpCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state)
        {
            return base.Channel.CorpCustomerCreationAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, rcNumber, Incorporationpdate, sms, email, tin, state);
        }
        
        public System.Threading.Tasks.Task<string> PlaceRestrictionDepositsAsync(string nuban, string restcode, string branch)
        {
            return base.Channel.PlaceRestrictionDepositsAsync(nuban, restcode, branch);
        }
        
        public System.Threading.Tasks.Task<string> RemoveRestrictionDepositsAsync(string nuban, string restcode, string branch)
        {
            return base.Channel.RemoveRestrictionDepositsAsync(nuban, restcode, branch);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetATMTrxnDetailByIDAsync(string transactionid)
        {
            return base.Channel.GetATMTrxnDetailByIDAsync(transactionid);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetFundsTransferDetailsAsync(string ftref, bool historysearch)
        {
            return base.Channel.GetFundsTransferDetailsAsync(ftref, historysearch);
        }
        
        public System.Threading.Tasks.Task<string> GetProductBalanceTodayAsync(string categoryCode)
        {
            return base.Channel.GetProductBalanceTodayAsync(categoryCode);
        }
        
        public System.Threading.Tasks.Task<decimal> GetPlCategoryBalanceForTodayAsync(string plCategoryCode)
        {
            return base.Channel.GetPlCategoryBalanceForTodayAsync(plCategoryCode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLockedEventsHistoryAsync(string ID)
        {
            return base.Channel.getLockedEventsHistoryAsync(ID);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetLockedEventsAsync(string atUniqueId)
        {
            return base.Channel.GetLockedEventsAsync(atUniqueId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLockedEventsLiveAsync(string ID)
        {
            return base.Channel.getLockedEventsLiveAsync(ID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAccountTitleAsync(string acctno, string acctname, string branchcode)
        {
            return base.Channel.UpdateAccountTitleAsync(acctno, acctname, branchcode);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDAOOfficerAsync(string acctno, string dao, string branchcode)
        {
            return base.Channel.UpdateDAOOfficerAsync(acctno, dao, branchcode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetKYCCRNumberAsync(string cusnum)
        {
            return base.Channel.GetKYCCRNumberAsync(cusnum);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetKYCDetailsAsync(string CRnumber)
        {
            return base.Channel.GetKYCDetailsAsync(CRnumber);
        }
        
        public System.Threading.Tasks.Task<string> updateCustomerAsync(string updateFormat)
        {
            return base.Channel.updateCustomerAsync(updateFormat);
        }
        
        public System.Threading.Tasks.Task<string> nipInwardCheckAsync(string accountNumber, string amount)
        {
            return base.Channel.nipInwardCheckAsync(accountNumber, amount);
        }
        
        public System.Threading.Tasks.Task<string[]> getEbContractBalancesBalanceAsync(string acctNum, string oracleConnection)
        {
            return base.Channel.getEbContractBalancesBalanceAsync(acctNum, oracleConnection);
        }
        
        public System.Threading.Tasks.Task<string> CreateDAOAsync(string DEPT_ACCT_OFF_CODE, string AREA, string NAME, string DELIVERY_POINT, string DEPT_LEVEL, string DEPT_PARENT, string STAFF_ID, string STF_EFF_DATE, string DEPARTMENT, string STATUS)
        {
            return base.Channel.CreateDAOAsync(DEPT_ACCT_OFF_CODE, AREA, NAME, DELIVERY_POINT, DEPT_LEVEL, DEPT_PARENT, STAFF_ID, STF_EFF_DATE, DEPARTMENT, STATUS);
        }
        
        public System.Threading.Tasks.Task<string> MapDaoToAccountAsync(string acctnum, int daocode)
        {
            return base.Channel.MapDaoToAccountAsync(acctnum, daocode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetDaoInfoForCustomerAsync(string customerid, int searchLevel)
        {
            return base.Channel.GetDaoInfoForCustomerAsync(customerid, searchLevel);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> CreatesStaffCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename)
        {
            return base.Channel.CreatesStaffCustomerAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dob, sms, title, email, middlename);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> CreateIndividualCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    string dob, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state)
        {
            return base.Channel.CreateIndividualCustomerAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dob, sms, title, email, middlename, state);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> CreateCorporateCustomer2Async(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string rcNumber, 
                    string Incorpdate, 
                    string sms, 
                    string email, 
                    string tin, 
                    string state, 
                    string place, 
                    string nature, 
                    string stateresidence)
        {
            return base.Channel.CreateCorporateCustomer2Async(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, rcNumber, Incorpdate, sms, email, tin, state, place, nature, stateresidence);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> CreateAssociationCustomerAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string Incorpdate, 
                    string sms, 
                    string email)
        {
            return base.Channel.CreateAssociationCustomerAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, Incorpdate, sms, email);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> CreateAccountAsync(string customerid, string productcode, string currency, string dt, string branch, string PND, string dao, string acctName)
        {
            return base.Channel.CreateAccountAsync(customerid, productcode, currency, dt, branch, PND, dao, acctName);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetBvnAsync(string bvn)
        {
            return base.Channel.GetBvnAsync(bvn);
        }
        
        public System.Threading.Tasks.Task<string> ConcessionAsync(string acctnumber, string Rate, string covenant)
        {
            return base.Channel.ConcessionAsync(acctnumber, Rate, covenant);
        }
        
        public System.Threading.Tasks.Task<bool> PerformPostingRestrictionOperationAsync(string acctnum, string bracode, string curcode, int restrictionCode, string action)
        {
            return base.Channel.PerformPostingRestrictionOperationAsync(acctnum, bracode, curcode, restrictionCode, action);
        }
        
        public System.Threading.Tasks.Task<string> CreateInternalAcctAsync(string customerid, string categorycode, string currency, System.DateTime dt, string branch, string dao, string shorttitle)
        {
            return base.Channel.CreateInternalAcctAsync(customerid, categorycode, currency, dt, branch, dao, shorttitle);
        }
        
        public System.Threading.Tasks.Task<string> getRelationshipManagerDetailsAsync(string daoCode)
        {
            return base.Channel.getRelationshipManagerDetailsAsync(daoCode);
        }
        
        public System.Threading.Tasks.Task<string> generateTillAccountAsync(string tellerId, string branchCode, string currencyCode)
        {
            return base.Channel.generateTillAccountAsync(tellerId, branchCode, currencyCode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetCustomerDetailsAsync(string customerID)
        {
            return base.Channel.GetCustomerDetailsAsync(customerID);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCustomerAsync(string customerid, string surname, string middlename, string firstname, string address, string sector, string target, string status, string bvn)
        {
            return base.Channel.UpdateCustomerAsync(customerid, surname, middlename, firstname, address, sector, target, status, bvn);
        }
        
        public System.Threading.Tasks.Task<string> SaveCustomerMandateNoSignatoryAsync(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription)
        {
            return base.Channel.SaveCustomerMandateNoSignatoryAsync(customerid, uploadedFilename, signatoryClass, mandateDescription);
        }
        
        public System.Threading.Tasks.Task<string> SaveCustomerMandateAsync(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname)
        {
            return base.Channel.SaveCustomerMandateAsync(customerid, uploadedFilename, signatoryClass, mandateDescription, signatoryShortName, signatoryFullname);
        }
        
        public System.Threading.Tasks.Task<string> SaveCustomerMandate2Async(string customerid, string uploadedFilename, string signatoryClass, string mandateDescription, string signatoryShortName, string signatoryFullname)
        {
            return base.Channel.SaveCustomerMandate2Async(customerid, uploadedFilename, signatoryClass, mandateDescription, signatoryShortName, signatoryFullname);
        }
        
        public System.Threading.Tasks.Task<string> Customer_Update_StringAsync(
                    string customerid, 
                    string fullname1, 
                    string fullname2, 
                    string shortName, 
                    string accountOfficer, 
                    string sector, 
                    string industry, 
                    string target, 
                    string customerStatus, 
                    string residence, 
                    string nationality, 
                    string customerType, 
                    string language, 
                    string birthOrIncorporationDate, 
                    string mnemonic, 
                    string street, 
                    string address, 
                    string townCountry, 
                    string postCode, 
                    string country, 
                    string phone1, 
                    string sms1, 
                    string email, 
                    string officePhone, 
                    string fax, 
                    string stateResidence, 
                    string addressLandmark, 
                    string legalID, 
                    string legalDocName, 
                    string legalHolderName, 
                    string legalIssuingAuth, 
                    string legalIssueDate, 
                    string legalExpDate, 
                    string legalCountryOfIssue, 
                    string taxId, 
                    string bvn, 
                    string nin, 
                    string scumlNum, 
                    string customerSince, 
                    bool isPep, 
                    string pepDescription, 
                    bool isIssueCheques, 
                    string nextOfKinName, 
                    string nextOfKinEmail, 
                    string nextOfKinPhone, 
                    string rcNumber, 
                    string placeOfRegistration, 
                    string natureOfBusiness, 
                    string employerPhone, 
                    string employerName, 
                    string employerAddress, 
                    string jobTitle, 
                    char gender, 
                    string title, 
                    string customerRiskRating_calculated, 
                    string customerRiskRating_Manual, 
                    string dateOfBirth)
        {
            return base.Channel.Customer_Update_StringAsync(customerid, fullname1, fullname2, shortName, accountOfficer, sector, industry, target, customerStatus, residence, nationality, customerType, language, birthOrIncorporationDate, mnemonic, street, address, townCountry, postCode, country, phone1, sms1, email, officePhone, fax, stateResidence, addressLandmark, legalID, legalDocName, legalHolderName, legalIssuingAuth, legalIssueDate, legalExpDate, legalCountryOfIssue, taxId, bvn, nin, scumlNum, customerSince, isPep, pepDescription, isIssueCheques, nextOfKinName, nextOfKinEmail, nextOfKinPhone, rcNumber, placeOfRegistration, natureOfBusiness, employerPhone, employerName, employerAddress, jobTitle, gender, title, customerRiskRating_calculated, customerRiskRating_Manual, dateOfBirth);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<bankService.Customer_UpdateResponse> bankService.banksSoap.Customer_UpdateAsync(bankService.Customer_UpdateRequest request)
        {
            return base.Channel.Customer_UpdateAsync(request);
        }
        
        public System.Threading.Tasks.Task<bankService.Customer_UpdateResponse> Customer_UpdateAsync(
                    string customerid, 
                    string fullname1, 
                    string fullname2, 
                    string shortName, 
                    string accountOfficer, 
                    string sector, 
                    string industry, 
                    string target, 
                    string customerStatus, 
                    string residence, 
                    string nationality, 
                    string customerType, 
                    string language, 
                    System.Nullable<System.DateTime> birthOrIncorporationDate, 
                    string mnemonic, 
                    string street, 
                    string address, 
                    string townCountry, 
                    string postCode, 
                    string country, 
                    string phone1, 
                    string sms1, 
                    string email, 
                    string officePhone, 
                    string fax, 
                    string stateResidence, 
                    string addressLandmark, 
                    string legalID, 
                    string legalDocName, 
                    string legalHolderName, 
                    string legalIssuingAuth, 
                    System.Nullable<System.DateTime> legalIssueDate, 
                    System.Nullable<System.DateTime> legalExpDate, 
                    string legalCountryOfIssue, 
                    string taxId, 
                    string bvn, 
                    string nin, 
                    string scumlNum, 
                    System.Nullable<System.DateTime> customerSince, 
                    bool isPep, 
                    string pepDescription, 
                    bool isIssueCheques, 
                    string nextOfKinName, 
                    string nextOfKinEmail, 
                    string nextOfKinPhone, 
                    string rcNumber, 
                    string placeOfRegistration, 
                    string natureOfBusiness, 
                    string employerPhone, 
                    string employerName, 
                    string employerAddress, 
                    string jobTitle, 
                    char gender, 
                    string title, 
                    string customerRiskRating_calculated, 
                    string customerRiskRating_Manual, 
                    System.Nullable<System.DateTime> dateOfBirth)
        {
            bankService.Customer_UpdateRequest inValue = new bankService.Customer_UpdateRequest();
            inValue.customerid = customerid;
            inValue.fullname1 = fullname1;
            inValue.fullname2 = fullname2;
            inValue.shortName = shortName;
            inValue.accountOfficer = accountOfficer;
            inValue.sector = sector;
            inValue.industry = industry;
            inValue.target = target;
            inValue.customerStatus = customerStatus;
            inValue.residence = residence;
            inValue.nationality = nationality;
            inValue.customerType = customerType;
            inValue.language = language;
            inValue.birthOrIncorporationDate = birthOrIncorporationDate;
            inValue.mnemonic = mnemonic;
            inValue.street = street;
            inValue.address = address;
            inValue.townCountry = townCountry;
            inValue.postCode = postCode;
            inValue.country = country;
            inValue.phone1 = phone1;
            inValue.sms1 = sms1;
            inValue.email = email;
            inValue.officePhone = officePhone;
            inValue.fax = fax;
            inValue.stateResidence = stateResidence;
            inValue.addressLandmark = addressLandmark;
            inValue.legalID = legalID;
            inValue.legalDocName = legalDocName;
            inValue.legalHolderName = legalHolderName;
            inValue.legalIssuingAuth = legalIssuingAuth;
            inValue.legalIssueDate = legalIssueDate;
            inValue.legalExpDate = legalExpDate;
            inValue.legalCountryOfIssue = legalCountryOfIssue;
            inValue.taxId = taxId;
            inValue.bvn = bvn;
            inValue.nin = nin;
            inValue.scumlNum = scumlNum;
            inValue.customerSince = customerSince;
            inValue.isPep = isPep;
            inValue.pepDescription = pepDescription;
            inValue.isIssueCheques = isIssueCheques;
            inValue.nextOfKinName = nextOfKinName;
            inValue.nextOfKinEmail = nextOfKinEmail;
            inValue.nextOfKinPhone = nextOfKinPhone;
            inValue.rcNumber = rcNumber;
            inValue.placeOfRegistration = placeOfRegistration;
            inValue.natureOfBusiness = natureOfBusiness;
            inValue.employerPhone = employerPhone;
            inValue.employerName = employerName;
            inValue.employerAddress = employerAddress;
            inValue.jobTitle = jobTitle;
            inValue.gender = gender;
            inValue.title = title;
            inValue.customerRiskRating_calculated = customerRiskRating_calculated;
            inValue.customerRiskRating_Manual = customerRiskRating_Manual;
            inValue.dateOfBirth = dateOfBirth;
            return ((bankService.banksSoap)(this)).Customer_UpdateAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getPresentedChequeAsync(string chequeNumber, string accountNumber)
        {
            return base.Channel.getPresentedChequeAsync(chequeNumber, accountNumber);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getStoppedChequeAsync(string chequeNumber, string accountNumber)
        {
            return base.Channel.getStoppedChequeAsync(chequeNumber, accountNumber);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAllFieldsAsync(string customerID)
        {
            return base.Channel.getCustomerAllFieldsAsync(customerID);
        }
        
        public System.Threading.Tasks.Task<string> SaveRefereeAsync(string customerID, string data)
        {
            return base.Channel.SaveRefereeAsync(customerID, data);
        }
        
        public System.Threading.Tasks.Task<string> Account_AddCo_OwnerAsync(string accountNumber, string acctBranch, string co_Owner_CustId, string co_Owner_Role, string action)
        {
            return base.Channel.Account_AddCo_OwnerAsync(accountNumber, acctBranch, co_Owner_CustId, co_Owner_Role, action);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductChangeAsync(System.DateTime effectiveDate, string newproductId, string accountnumber, string acctDomiciledBranch)
        {
            return base.Channel.UpdateProductChangeAsync(effectiveDate, newproductId, accountnumber, acctDomiciledBranch);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetHvtStatementAsync(string accountnumber, System.DateTime startdate, System.DateTime endDate)
        {
            return base.Channel.GetHvtStatementAsync(accountnumber, startdate, endDate);
        }
        
        public System.Threading.Tasks.Task<string> Customer_UpdateResidenceStatusAsync(string customerid, string residencestatus)
        {
            return base.Channel.Customer_UpdateResidenceStatusAsync(customerid, residencestatus);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDepositPayoutAccountsAsync(string depositArrangementid, System.DateTime effectiveDate, string principalPayoutAcct, string interestPayoutAcct, string chargePayoutAcct)
        {
            return base.Channel.UpdateDepositPayoutAccountsAsync(depositArrangementid, effectiveDate, principalPayoutAcct, interestPayoutAcct, chargePayoutAcct);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetInvestmentDetailsAsync(string investmentID)
        {
            return base.Channel.GetInvestmentDetailsAsync(investmentID);
        }
        
        public System.Threading.Tasks.Task<string> SetFixedInterestRateOnLoanAsync(string arrangementID, System.DateTime effectiveDate, decimal fixedRate, string propertyName)
        {
            return base.Channel.SetFixedInterestRateOnLoanAsync(arrangementID, effectiveDate, fixedRate, propertyName);
        }
        
        public System.Threading.Tasks.Task<string> ChangeFloatingKeyInterestRateOnLoanAsync(string arrangementID, System.DateTime effectiveDate, int floatingKey, decimal marginRate, bool isIncreaseAboveKeyOrBelowKey, string propertyName)
        {
            return base.Channel.ChangeFloatingKeyInterestRateOnLoanAsync(arrangementID, effectiveDate, floatingKey, marginRate, isIncreaseAboveKeyOrBelowKey, propertyName);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetAuthorizedMt202Async(string branch, string t24UserId)
        {
            return base.Channel.GetAuthorizedMt202Async(branch, t24UserId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetUnauthorizedMt202Async()
        {
            return base.Channel.GetUnauthorizedMt202Async();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetHvtAccountBalanceAsync(string accountnumber)
        {
            return base.Channel.GetHvtAccountBalanceAsync(accountnumber);
        }
        
        public System.Threading.Tasks.Task<string> CloseAccountAsync(string closeThisAccount, string moveBalanceToThisAccount, System.DateTime effectiveBankingDate)
        {
            return base.Channel.CloseAccountAsync(closeThisAccount, moveBalanceToThisAccount, effectiveBankingDate);
        }
        
        public System.Threading.Tasks.Task<string> PutRestrictionForInternalAccountAsync(string acctno, string restcode, string branchcode)
        {
            return base.Channel.PutRestrictionForInternalAccountAsync(acctno, restcode, branchcode);
        }
        
        public System.Threading.Tasks.Task<string> MnemonicForInternalAccountAsync(string acctno, string restcode, string branchcode)
        {
            return base.Channel.MnemonicForInternalAccountAsync(acctno, restcode, branchcode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getStatementAsync(string nuban, System.DateTime sdate, System.DateTime edate)
        {
            return base.Channel.getStatementAsync(nuban, sdate, edate);
        }
        
        public System.Threading.Tasks.Task<string> Customer_Update_Pep_RatingAsync(string customerid, string customerPepRating)
        {
            return base.Channel.Customer_Update_Pep_RatingAsync(customerid, customerPepRating);
        }
        
        public System.Threading.Tasks.Task<string> ChangeAccountBranchAsync(string accountnum, string destinationBranch, System.DateTime effectiveDate)
        {
            return base.Channel.ChangeAccountBranchAsync(accountnum, destinationBranch, effectiveDate);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetManagerChequeDetailsByDraftNumberAsync(string draftNumber)
        {
            return base.Channel.GetManagerChequeDetailsByDraftNumberAsync(draftNumber);
        }
        
        public System.Threading.Tasks.Task<string> ChequeIssueAsync(string accountnumber, string prefixForChequeIssueId, string chequeIssueStatus, System.DateTime issueDate, int numberIssued, string firstChequeSerialNumber, string stockRegisterId)
        {
            return base.Channel.ChequeIssueAsync(accountnumber, prefixForChequeIssueId, chequeIssueStatus, issueDate, numberIssued, firstChequeSerialNumber, stockRegisterId);
        }
        
        public System.Threading.Tasks.Task<int> T24SingleTxnRequeryInwardAsync(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date)
        {
            return base.Channel.T24SingleTxnRequeryInwardAsync(transaction_ref, credit_ACCOUNT, amount, value_date);
        }
        
        public System.Threading.Tasks.Task<string> T24SingleTxnRequeryInwardRefAsync(string transaction_ref, string credit_ACCOUNT, decimal amount, string value_date)
        {
            return base.Channel.T24SingleTxnRequeryInwardRefAsync(transaction_ref, credit_ACCOUNT, amount, value_date);
        }
        
        public System.Threading.Tasks.Task<int> T24SingleTxnRequeryOutwardAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date)
        {
            return base.Channel.T24SingleTxnRequeryOutwardAsync(transaction_ref, DEBIT_ACCOUNT, amount, value_date);
        }
        
        public System.Threading.Tasks.Task<int> T24NIPOUTWARDTxnRequeryAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date)
        {
            return base.Channel.T24NIPOUTWARDTxnRequeryAsync(transaction_ref, DEBIT_ACCOUNT, amount, value_date);
        }
        
        public System.Threading.Tasks.Task<bankService.ReversalFT[]> T24NIPOUTWARDTxnRequeryForAutoReversalAsync(string transaction_ref, string DEBIT_ACCOUNT)
        {
            return base.Channel.T24NIPOUTWARDTxnRequeryForAutoReversalAsync(transaction_ref, DEBIT_ACCOUNT);
        }
        
        public System.Threading.Tasks.Task<string> T24NIPOUTWARDTxnRequeryRefAsync(string transaction_ref, string DEBIT_ACCOUNT, decimal amount, string value_date)
        {
            return base.Channel.T24NIPOUTWARDTxnRequeryRefAsync(transaction_ref, DEBIT_ACCOUNT, amount, value_date);
        }
        
        public System.Threading.Tasks.Task<string> UnblockUserAsync(string userid)
        {
            return base.Channel.UnblockUserAsync(userid);
        }
        
        public System.Threading.Tasks.Task<string> getT24UserIDAsync(string tell_ID)
        {
            return base.Channel.getT24UserIDAsync(tell_ID);
        }
        
        public System.Threading.Tasks.Task<string> getT24UserID2Async(string signonname)
        {
            return base.Channel.getT24UserID2Async(signonname);
        }
        
        public System.Threading.Tasks.Task<bool> IsHolidayAsync(string sdate)
        {
            return base.Channel.IsHolidayAsync(sdate);
        }
        
        public System.Threading.Tasks.Task<string> getBankTellerIDAsync(string userid)
        {
            return base.Channel.getBankTellerIDAsync(userid);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> MandateRetrievalAsync(string nuban)
        {
            return base.Channel.MandateRetrievalAsync(nuban);
        }
        
        public System.Threading.Tasks.Task<string> LockAmountAsync(string accountNo, System.DateTime sDate, System.DateTime eDate, decimal amount)
        {
            return base.Channel.LockAmountAsync(accountNo, sDate, eDate, amount);
        }
        
        public System.Threading.Tasks.Task<string> UnLockAmountAsync(string lockId)
        {
            return base.Channel.UnLockAmountAsync(lockId);
        }
        
        public System.Threading.Tasks.Task<string> BlockAccountAsync(string accountNumber)
        {
            return base.Channel.BlockAccountAsync(accountNumber);
        }
        
        public System.Threading.Tasks.Task<string> UnBlockAccountAsync(string accountNumber)
        {
            return base.Channel.UnBlockAccountAsync(accountNumber);
        }
        
        public System.Threading.Tasks.Task<string> CustomerPortfolioAsync(string customerId)
        {
            return base.Channel.CustomerPortfolioAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<string> GetStateOfBranchAsync(string branchcode)
        {
            return base.Channel.GetStateOfBranchAsync(branchcode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCategoryAsync(string categorycode)
        {
            return base.Channel.getCategoryAsync(categorycode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTransactionReQueryAsync(string accountNo, System.DateTime transdate, string tid)
        {
            return base.Channel.getTransactionReQueryAsync(accountNo, transdate, tid);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTransactionReQueryforNibbsAsync(string tid)
        {
            return base.Channel.getTransactionReQueryforNibbsAsync(tid);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTransactionReQueryByRefAsync(string accountNo, System.DateTime transdate, string refId)
        {
            return base.Channel.getTransactionReQueryByRefAsync(accountNo, transdate, refId);
        }
        
        public System.Threading.Tasks.Task<string> UpdateBVNAsync(string customrId, string bvn)
        {
            return base.Channel.UpdateBVNAsync(customrId, bvn);
        }
        
        public System.Threading.Tasks.Task<string> accountopeningforexistingcustomerAsync(string customerid, string productcode, string currency, string branch)
        {
            return base.Channel.accountopeningforexistingcustomerAsync(customerid, productcode, currency, branch);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetIndustriesAsync()
        {
            return base.Channel.GetIndustriesAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetSectorsAsync()
        {
            return base.Channel.GetSectorsAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetCategoriesAsync()
        {
            return base.Channel.GetCategoriesAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetStatesAsync()
        {
            return base.Channel.GetStatesAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetTargetsAsync()
        {
            return base.Channel.GetTargetsAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetCustomerStatusListAsync()
        {
            return base.Channel.GetCustomerStatusListAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetBranchesAsync()
        {
            return base.Channel.GetBranchesAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetOldBranchCodeAsync(string branchCode)
        {
            return base.Channel.GetOldBranchCodeAsync(branchCode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getBankDetailsBySortCodeAsync(string sortcode)
        {
            return base.Channel.getBankDetailsBySortCodeAsync(sortcode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getBankDetailAsync()
        {
            return base.Channel.getBankDetailAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAllProductAsync()
        {
            return base.Channel.getAllProductAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAccountByProductAsync(string productCode)
        {
            return base.Channel.getAccountByProductAsync(productCode);
        }
        
        public System.Threading.Tasks.Task<string> isSMSSubscriberAsync(string customerId)
        {
            return base.Channel.isSMSSubscriberAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTellerLimitAsync(string Tellerid, string branchcode)
        {
            return base.Channel.getTellerLimitAsync(Tellerid, branchcode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerDepositAsync(string customerId)
        {
            return base.Channel.getCustomerDepositAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetCountriesAsync()
        {
            return base.Channel.GetCountriesAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getPaymentDetailAsync(string nuban, System.DateTime date)
        {
            return base.Channel.getPaymentDetailAsync(nuban, date);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTransactionDetailAsync(string nuban, System.DateTime date)
        {
            return base.Channel.getTransactionDetailAsync(nuban, date);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTotalTransactionAsync(string nuban)
        {
            return base.Channel.getTotalTransactionAsync(nuban);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> checktAccountforRestrictionAsync(string nuban)
        {
            return base.Channel.checktAccountforRestrictionAsync(nuban);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getTellerInfoAsync(string tellerId, string branchCode)
        {
            return base.Channel.getTellerInfoAsync(tellerId, branchCode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getChequeAsync(string nuban, string chequeNo)
        {
            return base.Channel.getChequeAsync(nuban, chequeNo);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLoanScheduleAsync(string arrangementId)
        {
            return base.Channel.getLoanScheduleAsync(arrangementId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLoanInfoAsync(string arrangementId)
        {
            return base.Channel.getLoanInfoAsync(arrangementId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAccountFullInfoAsync(string nuban)
        {
            return base.Channel.getAccountFullInfoAsync(nuban);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAccountFullInfo_NewAsync(string nuban)
        {
            return base.Channel.getAccountFullInfo_NewAsync(nuban);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAccountFullInfoByAppIDAsync(string nuban, string appid)
        {
            return base.Channel.getAccountFullInfoByAppIDAsync(nuban, appid);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomrInfoAsync(string customerId)
        {
            return base.Channel.getCustomrInfoAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomrInfoByAppIDAsync(string customerId, string appid)
        {
            return base.Channel.getCustomrInfoByAppIDAsync(customerId, appid);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getIndivCustomerAsync(string customerId)
        {
            return base.Channel.getIndivCustomerAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAddressAsync(string customerId)
        {
            return base.Channel.getCustomerAddressAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerContactsAsync(string customerId)
        {
            return base.Channel.getCustomerContactsAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerPartysAsync(string customerId)
        {
            return base.Channel.getCustomerPartysAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByCustomerId_NewAsync(string customerId)
        {
            return base.Channel.getCustomerAccountsByCustomerId_NewAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByCustomerIdAsync(string customerId)
        {
            return base.Channel.getCustomerAccountsByCustomerIdAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByCustomerId2Async(string customerId)
        {
            return base.Channel.getCustomerAccountsByCustomerId2Async(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByCustomerIdbyAppIDAsync(string customerId, string appid)
        {
            return base.Channel.getCustomerAccountsByCustomerIdbyAppIDAsync(customerId, appid);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByEmailAsync(string email)
        {
            return base.Channel.getCustomerAccountsByEmailAsync(email);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCustomerAccountsByMobileNoAsync(string mobileNo)
        {
            return base.Channel.getCustomerAccountsByMobileNoAsync(mobileNo);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getProductByCodeAsync(string productCode)
        {
            return base.Channel.getProductByCodeAsync(productCode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCurrenciesAsync()
        {
            return base.Channel.getCurrenciesAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCurrencyByCodeAsync(string currencyCode)
        {
            return base.Channel.getCurrencyByCodeAsync(currencyCode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCompaniesAsync()
        {
            return base.Channel.getCompaniesAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCompanyByCodeAsync(string companyCode)
        {
            return base.Channel.getCompanyByCodeAsync(companyCode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getCompanyByLocationAsync(int locationID)
        {
            return base.Channel.getCompanyByLocationAsync(locationID);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetRegionsAsync()
        {
            return base.Channel.GetRegionsAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetSortCodesAsync(string bankcode)
        {
            return base.Channel.GetSortCodesAsync(bankcode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getStatementV1Async(string nuban, System.DateTime sdate, System.DateTime edate)
        {
            return base.Channel.getStatementV1Async(nuban, sdate, edate);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getStatementByAppIDAsync(string nuban, System.DateTime sdate, System.DateTime edate, string appid)
        {
            return base.Channel.getStatementByAppIDAsync(nuban, sdate, edate, appid);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getBalancesAsync(string nuban, System.DateTime sdate, System.DateTime edate)
        {
            return base.Channel.getBalancesAsync(nuban, sdate, edate);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getLastNTransactionAsync(string nuban, int NoRecord)
        {
            return base.Channel.getLastNTransactionAsync(nuban, NoRecord);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getActiveLoansAsync(string customerId)
        {
            return base.Channel.getActiveLoansAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getSbnReadLoanOrAccountAsync(string customerid, string productLine)
        {
            return base.Channel.getSbnReadLoanOrAccountAsync(customerid, productLine);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetIndivCustomerAsync(string customerId)
        {
            return base.Channel.T24ACPGetIndivCustomerAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetCustomerAccountAsync(string customerId)
        {
            return base.Channel.T24ACPGetCustomerAccountAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetCustomerAddressAsync(string customerId)
        {
            return base.Channel.T24ACPGetCustomerAddressAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetCustomerContactAsync(string customerId)
        {
            return base.Channel.T24ACPGetCustomerContactAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetCustomerPartysAsync(string customerId)
        {
            return base.Channel.T24ACPGetCustomerPartysAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24ACPGetAllCustomerInfoAsync(string customerId)
        {
            return base.Channel.T24ACPGetAllCustomerInfoAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24CAMGetAccountDebitCreditAsync(string acct, System.DateTime sDate, System.DateTime eDate)
        {
            return base.Channel.T24CAMGetAccountDebitCreditAsync(acct, sDate, eDate);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetAccountFullInfoAsync(string nuban)
        {
            return base.Channel.T24GetAccountFullInfoAsync(nuban);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCompaniesAsync()
        {
            return base.Channel.T24GetCompaniesAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCompanyByCodeAsync(string nuban)
        {
            return base.Channel.T24GetCompanyByCodeAsync(nuban);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetLastNTransactionAsync(string nuban, int recordNo)
        {
            return base.Channel.T24GetLastNTransactionAsync(nuban, recordNo);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetLastNTransactionRtnAsync(string nuban, string recordNo)
        {
            return base.Channel.GetLastNTransactionRtnAsync(nuban, recordNo);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCustomerAccountsByBVNAsync(string bvn)
        {
            return base.Channel.T24GetCustomerAccountsByBVNAsync(bvn);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCustomerAccountsByCustomerIdAsync(string customerId)
        {
            return base.Channel.T24GetCustomerAccountsByCustomerIdAsync(customerId);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCustomerAccountsByEmailAsync(string email)
        {
            return base.Channel.T24GetCustomerAccountsByEmailAsync(email);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCustomerAccountsByMobileNoAsync(string email)
        {
            return base.Channel.T24GetCustomerAccountsByMobileNoAsync(email);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCurrencyByCodeAsync(string currencyCode)
        {
            return base.Channel.T24GetCurrencyByCodeAsync(currencyCode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24GetCurrenciesAsync()
        {
            return base.Channel.T24GetCurrenciesAsync();
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> T24CAMGetCOTIncomeAsync(string acct, System.DateTime sDate, System.DateTime eDate)
        {
            return base.Channel.T24CAMGetCOTIncomeAsync(acct, sDate, eDate);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> AccountCreationAsync(string customerid, string productcode, string currency, string branch, string PND, string dao, string acctName)
        {
            return base.Channel.AccountCreationAsync(customerid, productcode, currency, branch, PND, dao, acctName);
        }
        
        public System.Threading.Tasks.Task<string> AmountLockwithoutDateAsync(string account, decimal amt)
        {
            return base.Channel.AmountLockwithoutDateAsync(account, amt);
        }
        
        public System.Threading.Tasks.Task<string> StopChequePaymentAsync(string account, string chequeno)
        {
            return base.Channel.StopChequePaymentAsync(account, chequeno);
        }
        
        public System.Threading.Tasks.Task<string> PatialUnLockAmountAsync(string id, string amount)
        {
            return base.Channel.PatialUnLockAmountAsync(id, amount);
        }
        
        public System.Threading.Tasks.Task<string> PlaceStandingOrderAsync(string originatingaccount, string beneficiaryaccount, string amount, System.DateTime startdate, string frequency)
        {
            return base.Channel.PlaceStandingOrderAsync(originatingaccount, beneficiaryaccount, amount, startdate, frequency);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> IndvCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename, 
                    string state)
        {
            return base.Channel.IndvCustomerCreationAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dateofbirth, sms, title, email, middlename, state);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> StaffAccountCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    string gender, 
                    System.DateTime dateofbirth, 
                    string sms, 
                    string title, 
                    string email, 
                    string middlename)
        {
            return base.Channel.StaffAccountCreationAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, gender, dateofbirth, sms, title, email, middlename);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> AsscCustomerCreationAsync(
                    string firstname, 
                    string surname, 
                    string street, 
                    string sector, 
                    string accountofficer, 
                    string industry, 
                    string target, 
                    string Nationality, 
                    string customerstatus, 
                    string residence, 
                    string introducer, 
                    string bvn, 
                    string branch, 
                    System.DateTime Incorporationpdate, 
                    string sms, 
                    string email)
        {
            return base.Channel.AsscCustomerCreationAsync(firstname, surname, street, sector, accountofficer, industry, target, Nationality, customerstatus, residence, introducer, bvn, branch, Incorporationpdate, sms, email);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> UserLimitAsync(string username)
        {
            return base.Channel.UserLimitAsync(username);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveUserID2Async(string username)
        {
            return base.Channel.RetrieveUserID2Async(username);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveUserIDAsync(string username)
        {
            return base.Channel.RetrieveUserIDAsync(username);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetATMDetailAsync(string stan, string retno, string authcode, string debitacct, string pan)
        {
            return base.Channel.GetATMDetailAsync(stan, retno, authcode, debitacct, pan);
        }
        
        public System.Threading.Tasks.Task<string> ATMPassUpdateAsync(string recid, string userid, string pass)
        {
            return base.Channel.ATMPassUpdateAsync(recid, userid, pass);
        }
        
        public System.Threading.Tasks.Task<string> ATMParameterUpdateAsync(string recid, string userid, string pass)
        {
            return base.Channel.ATMParameterUpdateAsync(recid, userid, pass);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> ValidateDAOAsync(string daocode)
        {
            return base.Channel.ValidateDAOAsync(daocode);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetInternalAcctStatementAsync(string acct, System.DateTime startdate, System.DateTime enddate)
        {
            return base.Channel.GetInternalAcctStatementAsync(acct, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<string> UpdateIntroducerAsync(string customer, string introducer)
        {
            return base.Channel.UpdateIntroducerAsync(customer, introducer);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetATMTxnDateRangeAsync(string debitaccount, System.DateTime startdate, System.DateTime enddate)
        {
            return base.Channel.GetATMTxnDateRangeAsync(debitaccount, startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAcctAltIDAsync(string AccountNo, string AltAccount, string branch)
        {
            return base.Channel.UpdateAcctAltIDAsync(AccountNo, AltAccount, branch);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetAccountfromDByAccountNum2Async(string acctnumber)
        {
            return base.Channel.GetAccountfromDByAccountNum2Async(acctnumber);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetAccountfromDByAccountNumAsync(string acctnumber)
        {
            return base.Channel.GetAccountfromDByAccountNumAsync(acctnumber);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> GetAccountInfoByRoutineAsync(string acctnumber)
        {
            return base.Channel.GetAccountInfoByRoutineAsync(acctnumber);
        }
        
        public System.Threading.Tasks.Task<string> UpdateExistBVNAsync(string customerid, string Bvn)
        {
            return base.Channel.UpdateExistBVNAsync(customerid, Bvn);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getStatement1Async(string nuban, System.DateTime sdate, System.DateTime edate)
        {
            return base.Channel.getStatement1Async(nuban, sdate, edate);
        }
        
        public System.Threading.Tasks.Task<string> PlaceRestrictionAsync(string nuban, string restcode, string branch)
        {
            return base.Channel.PlaceRestrictionAsync(nuban, restcode, branch);
        }
        
        public System.Threading.Tasks.Task<string> RemoveRestrictionAsync(string nuban, string restcode, string branch)
        {
            return base.Channel.RemoveRestrictionAsync(nuban, restcode, branch);
        }
        
        public System.Threading.Tasks.Task<string> GetOverdueReportAsync()
        {
            return base.Channel.GetOverdueReportAsync();
        }
        
        public System.Threading.Tasks.Task<string> DeriveInternalAccountAsync(string currency, string categoryCode, string sequency, string companyCode)
        {
            return base.Channel.DeriveInternalAccountAsync(currency, categoryCode, sequency, companyCode);
        }
        
        public System.Threading.Tasks.Task<string> getInternalAccountAsync(string companyCode, string currency, string categoryCode)
        {
            return base.Channel.getInternalAccountAsync(companyCode, currency, categoryCode);
        }
        
        public System.Threading.Tasks.Task<string> SendEmailAsync(string destinationEmail, string sourceEmail, string body, string subject)
        {
            return base.Channel.SendEmailAsync(destinationEmail, sourceEmail, body, subject);
        }
        
        public System.Threading.Tasks.Task<bankService.ArrayOfXElement> getAcctInfoByNubanandPhoneAsync(string nuban, string mobile)
        {
            return base.Channel.getAcctInfoByNubanandPhoneAsync(nuban, mobile);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<bankService.LockAmountWithReasonResponse> bankService.banksSoap.LockAmountWithReasonAsync(bankService.LockAmountWithReasonRequest request)
        {
            return base.Channel.LockAmountWithReasonAsync(request);
        }
        
        public System.Threading.Tasks.Task<bankService.LockAmountWithReasonResponse> LockAmountWithReasonAsync(string acct, System.Nullable<System.DateTime> sDate, System.Nullable<System.DateTime> eDate, decimal amt, string reasonForLocking)
        {
            bankService.LockAmountWithReasonRequest inValue = new bankService.LockAmountWithReasonRequest();
            inValue.acct = acct;
            inValue.sDate = sDate;
            inValue.eDate = eDate;
            inValue.amt = amt;
            inValue.reasonForLocking = reasonForLocking;
            return ((bankService.banksSoap)(this)).LockAmountWithReasonAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.banksSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.banksSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.banksSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://10.0.41.188:8083/banks.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.banksSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://10.0.41.188:8083/banks.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            banksSoap,
            
            banksSoap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.0.0.2")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
