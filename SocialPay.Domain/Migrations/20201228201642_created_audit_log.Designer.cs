// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialPay.Domain;

namespace SocialPay.Domain.Migrations
{
    [DbContext(typeof(SocialPayDbContext))]
    [Migration("20201228201642_created_audit_log")]
    partial class created_audit_log
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-preview.7.20365.15");

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowFioranoT24Request", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long?>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CommissionCode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CreditAccountNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CreditCurrency")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("DebitAcctNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DebitCurrency")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("JsonRequest")
                        .HasColumnType("NVARCHAR(950)");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(230)");

                    b.Property<string>("SessionId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionBranch")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("TrxnLocation")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("VtellerAppID")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("narrations")
                        .HasColumnType("NVARCHAR(530)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("AcceptedEscrowFioranoT24Request");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowInterBankTransactionRequest", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("AccountLockID")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("AccountName")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AppID")
                        .HasColumnType("int");

                    b.Property<string>("BeneficiaryBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BeneficiaryKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BraCodeVal")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("ChannelCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CusNumVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationBankCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LedCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("NESessionID")
                        .HasColumnType("NVARCHAR(35)");

                    b.Property<string>("OriginatorAccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OrignatorName")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("PaymentRef")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("SubAcctVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("AcceptedEscrowInterBankTransactionRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("AcceptedEscrowWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AccountResetRequest", b =>
                {
                    b.Property<long>("AccountResetRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("AccountResetRequestId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("AccountResetRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ClientAuthentication", b =>
                {
                    b.Property<long>("ClientAuthenticationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<byte[]>("ClientSecretHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ClientSecretSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("FullName")
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("RoleName")
                        .HasColumnType("NVARCHAR(25)");

                    b.Property<string>("StatusCode")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("UserName")
                        .HasColumnType("NVARCHAR(35)");

                    b.HasKey("ClientAuthenticationId");

                    b.ToTable("ClientAuthentication");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ClientLoginStatus", b =>
                {
                    b.Property<long>("ClientLoginStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<int>("LoginAttempt")
                        .HasColumnType("int");

                    b.HasKey("ClientLoginStatusId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("ClientLoginStatus");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CreateWalletResponse", b =>
                {
                    b.Property<long>("CreateWalletResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("CreateWalletResponseId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("CreateWalletResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CreditMerchantWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("CreditMerchantWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CustomerOtherPaymentsInfo", b =>
                {
                    b.Property<long>("CustomerOtherPaymentsInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerDescription")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("FileLocation")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("Fullname")
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<long>("MerchantPaymentSetupId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<bool>("PaymentStatus")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("CustomerOtherPaymentsInfoId");

                    b.HasIndex("MerchantPaymentSetupId");

                    b.ToTable("CustomerOtherPaymentsInfo");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CustomerTransaction", b =>
                {
                    b.Property<long>("CustomerTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("MerchantPaymentSetupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerTransactionId");

                    b.HasIndex("MerchantPaymentSetupId");

                    b.ToTable("CustomerTransaction");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DebitMerchantWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DebitMerchantWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeclinedWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DeclinedWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DefaultWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DefaultWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeliveryDayEscrowInterBankTransactionRequest", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("AccountLockID")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("AccountName")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AppID")
                        .HasColumnType("int");

                    b.Property<string>("BeneficiaryBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BeneficiaryKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BraCodeVal")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("ChannelCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CusNumVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationBankCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LedCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("NESessionID")
                        .HasColumnType("NVARCHAR(35)");

                    b.Property<string>("OriginatorAccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OrignatorName")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("PaymentRef")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("SubAcctVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DeliveryDayEscrowInterBankTransactionRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeliveryDayWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DeliveryDayWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DisputeRequestLog", b =>
                {
                    b.Property<long>("DisputeRequestLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisputeComment")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("DisputeFile")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("FileLocation")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ProcessedBy")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("DisputeRequestLogId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DisputeRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FailedTransactions", b =>
                {
                    b.Property<long>("FailedTransactionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(550)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("FailedTransactionsId");

                    b.ToTable("FailedTransactions");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FioranoT24CardCreditRequest", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CommissionCode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CreditAccountNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CreditCurrency")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("DebitAcctNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DebitCurrency")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("JsonRequest")
                        .HasColumnType("NVARCHAR(950)");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(230)");

                    b.Property<string>("SessionId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionBranch")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("TrxnLocation")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("VtellerAppID")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("narrations")
                        .HasColumnType("NVARCHAR(530)");

                    b.HasKey("PaymentReference");

                    b.ToTable("FioranoT24CardCreditRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FioranoT24DeliveryDayRequest", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CommissionCode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CreditAccountNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CreditCurrency")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("DebitAcctNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DebitCurrency")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("JsonRequest")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(230)");

                    b.Property<string>("SessionId")
                        .HasColumnType("NVARCHAR(35)");

                    b.Property<string>("TransactionBranch")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("TrxnLocation")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("VtellerAppID")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("narrations")
                        .HasColumnType("NVARCHAR(130)");

                    b.HasKey("PaymentReference");

                    b.ToTable("FioranoT24DeliveryDayRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FioranoT24TransactionResponse", b =>
                {
                    b.Property<long>("FioranoT24TransactionResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Balance")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CHARGEAMT")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("COMMAMT")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("FTID")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("JsonResponse")
                        .HasColumnType("NVARCHAR(550)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ResponseCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("ResponseText")
                        .HasColumnType("NVARCHAR(280)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FioranoT24TransactionResponseId");

                    b.ToTable("FioranoT24TransactionResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InterBankTransactionRequest", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("AccountLockID")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("AccountName")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AppID")
                        .HasColumnType("int");

                    b.Property<string>("BeneficiaryBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BeneficiaryKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BraCodeVal")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("ChannelCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CusNumVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationBankCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LedCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("NESessionID")
                        .HasColumnType("NVARCHAR(35)");

                    b.Property<string>("OriginatorAccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OrignatorName")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("PaymentRef")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("SubAcctVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("InterBankTransactionRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InvoicePaymentInfo", b =>
                {
                    b.Property<long>("InvoicePaymentInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("Fullname")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<long>("InvoicePaymentLinkId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("InvoicePaymentInfoId");

                    b.HasIndex("InvoicePaymentLinkId");

                    b.ToTable("InvoicePaymentInfo");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InvoicePaymentLink", b =>
                {
                    b.Property<long>("InvoicePaymentLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceName")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("Qty")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<bool>("TransactionStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoicePaymentLinkId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("InvoicePaymentLink");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ItemAcceptedOrRejected", b =>
                {
                    b.Property<long>("ItemAcceptedOrRejectedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .HasColumnType("NVARCHAR(180)");

                    b.Property<long>("CustomerTransactionId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ProcessedBy")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<DateTime>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("ItemAcceptedOrRejectedId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("ItemAcceptedOrRejected");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LinkCategory", b =>
                {
                    b.Property<long>("LinkCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("LinkCategoryId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("LinkCategory");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LoginAttemptHistory", b =>
                {
                    b.Property<long>("LoginAttemptHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.HasKey("LoginAttemptHistoryId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("LoginAttemptHistory");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantActivitySetup", b =>
                {
                    b.Property<long>("MerchantActivitySetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OutSideLagos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OutSideNigeria")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayOrchargeMe")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<bool>("ReceiveEmail")
                        .HasColumnType("bit");

                    b.Property<decimal>("WithinLagos")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MerchantActivitySetupId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantActivitySetup");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantBankInfo", b =>
                {
                    b.Property<long>("MerchantBankInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("AccountName")
                        .HasColumnType("NVARCHAR(35)");

                    b.Property<string>("BVN")
                        .HasColumnType("NVARCHAR(12)");

                    b.Property<string>("BankCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("BankName")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Country")
                        .HasColumnType("NVARCHAR(25)");

                    b.Property<string>("Currency")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CusNum")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DefaultAccount")
                        .HasColumnType("bit");

                    b.Property<string>("KycLevel")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("LedCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("Nuban")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("MerchantBankInfoId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantBankInfo");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantBusinessInfo", b =>
                {
                    b.Property<long>("MerchantBusinessInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("BusinessEmail")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("BusinessName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("BusinessPhoneNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Chargebackemail")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Country")
                        .HasColumnType("NVARCHAR(25)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileLocation")
                        .HasColumnType("NVARCHAR(190)");

                    b.Property<bool>("HasSpectaMerchantID")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("MerchantReferenceId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("SpectaMerchantID")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Tin")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("MerchantBusinessInfoId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantBusinessInfo");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantPaymentSetup", b =>
                {
                    b.Property<long>("MerchantPaymentSetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("AdditionalCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AdditionalDetails")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomUrl")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<decimal>("CustomerAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerDescription")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryMethod")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<long>("DeliveryTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Document")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("FileLocation")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<bool>("HasAdditionalCharges")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MerchantAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MerchantDescription")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("PaymentCategory")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("PaymentLinkName")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("PaymentLinkUrl")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<bool>("RedirectAfterPayment")
                        .HasColumnType("bit");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("MerchantPaymentSetupId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantPaymentSetup");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantWallet", b =>
                {
                    b.Property<long>("MerchantWalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoB")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("Firstname")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Gender")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Mobile")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("status")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("MerchantWalletId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantWallet");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.NonEscrowFioranoT24Request", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CommissionCode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CreditAccountNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CreditCurrency")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("DebitAcctNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DebitCurrency")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("JsonRequest")
                        .HasColumnType("NVARCHAR(980)");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("SessionId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionBranch")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("TrxnLocation")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("VtellerAppID")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("narrations")
                        .HasColumnType("NVARCHAR(530)");

                    b.HasKey("PaymentReference");

                    b.ToTable("NonEscrowFioranoT24Request");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.PaymentResponse", b =>
                {
                    b.Property<long>("PaymentResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("PaymentResponseId");

                    b.ToTable("PaymentResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.PinRequest", b =>
                {
                    b.Property<long>("PinRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pin")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TokenSecret")
                        .HasColumnType("NVARCHAR(350)");

                    b.HasKey("PinRequestId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("PinRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.TransactionLog", b =>
                {
                    b.Property<long>("TransactionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AcceptRejectLastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActivityStatus")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("Category")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<long>("CustomerInfo")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateNotified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryDayTransferStatus")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<DateTime>("DeliveryFinalDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompletedPayWithCard")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNotified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsQueuedPayWithCard")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWalletCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWalletQueued")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkCategory")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("PaymentChannel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TransactionCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionJourney")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<DateTime>("WalletFundDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionLogId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("TransactionLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.WalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("WalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.WalletTransferResponse", b =>
                {
                    b.Property<long>("WalletTransferResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("message")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("response")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("responsedata")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<bool>("sent")
                        .HasColumnType("bit");

                    b.HasKey("WalletTransferResponseId");

                    b.ToTable("WalletTransferResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowFioranoT24Request", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", null)
                        .WithMany("AcceptedEscrowFioranoT24Request")
                        .HasForeignKey("ClientAuthenticationId");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowInterBankTransactionRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("AcceptedEscrowInterBankTransactionRequest")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("AcceptedEscrowWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AccountResetRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("AccountResetRequest")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ClientLoginStatus", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("ClientLoginStatus")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CreateWalletResponse", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("CreateWalletResponse")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CreditMerchantWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("CreditMerchantWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CustomerOtherPaymentsInfo", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.MerchantPaymentSetup", "MerchantPaymentSetup")
                        .WithMany("CustomerOtherPaymentsInfo")
                        .HasForeignKey("MerchantPaymentSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CustomerTransaction", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.MerchantPaymentSetup", "MerchantPaymentSetup")
                        .WithMany("CustomerTransaction")
                        .HasForeignKey("MerchantPaymentSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DebitMerchantWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("DebitMerchantWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeclinedWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("DeclinedWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DefaultWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("DefaultWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeliveryDayEscrowInterBankTransactionRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany()
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeliveryDayWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("DeliveryDayWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DisputeRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("DisputeRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InterBankTransactionRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("InterBankTransactionRequest")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InvoicePaymentInfo", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.InvoicePaymentLink", "InvoicePaymentLink")
                        .WithMany("InvoicePaymentInfo")
                        .HasForeignKey("InvoicePaymentLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InvoicePaymentLink", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("InvoicePaymentLink")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ItemAcceptedOrRejected", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("ItemAcceptedOrRejected")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LinkCategory", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("LinkCategory")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LoginAttemptHistory", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("LoginAttemptHistory")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantActivitySetup", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantActivitySetup")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantBankInfo", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantBankInfo")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantBusinessInfo", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantBusinessInfo")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantPaymentSetup", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantPaymentSetup")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantWallet", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantWallet")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.PinRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("PinRequest")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.TransactionLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("TransactionLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.WalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("WalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
