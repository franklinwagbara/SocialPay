// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialPay.Domain;

namespace SocialPay.Domain.Migrations
{
    [DbContext(typeof(SocialPayDbContext))]
    [Migration("20211220161052_notification-table")]
    partial class notificationtable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-preview.7.20365.15");

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowFioranoT24Request", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long?>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CommissionCode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CreditAccountNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CreditCurrency")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("DebitAcctNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DebitCurrency")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("JsonRequest")
                        .HasColumnType("NVARCHAR(950)");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(230)");

                    b.Property<string>("SessionId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionBranch")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("TrxnLocation")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("VtellerAppID")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("narrations")
                        .HasColumnType("NVARCHAR(530)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("AcceptedEscrowFioranoT24Request");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowInterBankTransactionRequest", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("AccountLockID")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("AccountName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AppID")
                        .HasColumnType("int");

                    b.Property<string>("BeneficiaryBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BeneficiaryKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BraCodeVal")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("ChannelCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CusNumVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationBankCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LedCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("NESessionID")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("OriginatorAccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OrignatorName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("PaymentRef")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("SubAcctVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("AcceptedEscrowInterBankTransactionRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("AcceptedEscrowWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AccountHistory", b =>
                {
                    b.Property<long>("AccountHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ClientSecretHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ClientSecretSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.HasKey("AccountHistoryId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("AccountHistory");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AccountResetRequest", b =>
                {
                    b.Property<long>("AccountResetRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("AccountResetRequestId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("AccountResetRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ApplyForLoan", b =>
                {
                    b.Property<long>("ApplyForLoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ConfirmTokenizationResponse")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HaveSterlingBankAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveSterlingBankBusinessAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAttended")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBadDebt")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCardTokenized")
                        .HasColumnType("bit");

                    b.Property<long>("LoanRepaymentPlanId")
                        .HasColumnType("bigint");

                    b.Property<string>("TokenizationEmail")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("TokenizationReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TokenizationToken")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<bool>("isCustomerClean")
                        .HasColumnType("bit");

                    b.HasKey("ApplyForLoanId");

                    b.HasIndex("ClientAuthenticationId");

                    b.HasIndex("LoanRepaymentPlanId");

                    b.ToTable("ApplyForLoan");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.BindMerchant", b =>
                {
                    b.Property<long>("BindMerchantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("MchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MerchantQRCodeOnboardingId")
                        .HasColumnType("bigint");

                    b.HasKey("BindMerchantId");

                    b.HasIndex("MerchantQRCodeOnboardingId");

                    b.ToTable("BindMerchant");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.BindMerchantResponse", b =>
                {
                    b.Property<long>("BindMerchantResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("BindMerchantId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("JsonResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mch_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BindMerchantResponseId");

                    b.HasIndex("BindMerchantId");

                    b.ToTable("BindMerchantResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CardTokenization", b =>
                {
                    b.Property<long>("CardTokenizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<float>("amount")
                        .HasColumnType("real");

                    b.Property<string>("bvn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cardMinExpiryInMonths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("channel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("redirectUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("responseUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("tokenType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardTokenizationId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("CardTokenization");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ClientAuthentication", b =>
                {
                    b.Property<long>("ClientAuthenticationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Bvn")
                        .HasColumnType("NVARCHAR(11)");

                    b.Property<byte[]>("ClientSecretHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ClientSecretSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("FullName")
                        .HasColumnType("NVARCHAR(55)");

                    b.Property<bool>("HasRegisteredCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("QrCodeStatus")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("ReferCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("ReferralCode")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("RoleName")
                        .HasColumnType("NVARCHAR(25)");

                    b.Property<string>("StatusCode")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("UserName")
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("ClientAuthenticationId");

                    b.ToTable("ClientAuthentication");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ClientLoginStatus", b =>
                {
                    b.Property<long>("ClientLoginStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<int>("LoginAttempt")
                        .HasColumnType("int");

                    b.HasKey("ClientLoginStatusId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("ClientLoginStatus");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CreateWalletResponse", b =>
                {
                    b.Property<long>("CreateWalletResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("CreateWalletResponseId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("CreateWalletResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CreditMerchantWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("CreditMerchantWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CustomerOtherPaymentsInfo", b =>
                {
                    b.Property<long>("CustomerOtherPaymentsInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerDescription")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("FileLocation")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("Fullname")
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<long>("MerchantPaymentSetupId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<bool>("PaymentStatus")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("CustomerOtherPaymentsInfoId");

                    b.HasIndex("MerchantPaymentSetupId");

                    b.ToTable("CustomerOtherPaymentsInfo");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CustomerTransaction", b =>
                {
                    b.Property<long>("CustomerTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("MerchantPaymentSetupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerTransactionId");

                    b.HasIndex("MerchantPaymentSetupId");

                    b.ToTable("CustomerTransaction");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DebitMerchantWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DebitMerchantWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeclinedWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DeclinedWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DefaultWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DefaultWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeliveryDayEscrowInterBankTransactionRequest", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("AccountLockID")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("AccountName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AppID")
                        .HasColumnType("int");

                    b.Property<string>("BeneficiaryBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BeneficiaryKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BraCodeVal")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("ChannelCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CusNumVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationBankCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LedCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("NESessionID")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("OriginatorAccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OrignatorName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("PaymentRef")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("SubAcctVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DeliveryDayEscrowInterBankTransactionRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeliveryDayWalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DeliveryDayWalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DisputeRequestLog", b =>
                {
                    b.Property<long>("DisputeRequestLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisputeComment")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("DisputeFile")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("FileLocation")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ProcessedBy")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("DisputeRequestLogId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DisputeRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DstvAccountLookup", b =>
                {
                    b.Property<long>("DstvAccountLookupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("countryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchantReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vasId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DstvAccountLookupId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("DstvAccountLookup");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DstvAccountLookupResponse", b =>
                {
                    b.Property<long>("DstvAccountLookupResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<long>("DstvAccountLookupId")
                        .HasColumnType("bigint");

                    b.Property<string>("merchantReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payUVasReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pointOfFailure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DstvAccountLookupResponseId");

                    b.HasIndex("DstvAccountLookupId");

                    b.ToTable("DstvAccountLookupResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.EventLog", b =>
                {
                    b.Property<long>("EventLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("ModuleAccessed")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR(30)");

                    b.HasKey("EventLogId");

                    b.ToTable("EventLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FailedTransactions", b =>
                {
                    b.Property<long>("FailedTransactionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(550)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("FailedTransactionsId");

                    b.ToTable("FailedTransactions");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FioranoBillsPaymentResponse", b =>
                {
                    b.Property<long>("FioranoBillsPaymentResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Balance")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CHARGEAMT")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("COMMAMT")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("FTID")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<long>("FioranoBillsRequestId")
                        .HasColumnType("bigint");

                    b.Property<string>("JsonResponse")
                        .HasColumnType("NVARCHAR(550)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ResponseCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("ResponseText")
                        .HasColumnType("NVARCHAR(280)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FioranoBillsPaymentResponseId");

                    b.HasIndex("FioranoBillsRequestId");

                    b.ToTable("FioranoBillsPaymentResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FioranoBillsRequest", b =>
                {
                    b.Property<long>("FioranoBillsRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("BillsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CommissionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebitAcctNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrxnLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VtellerAppID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("narrations")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FioranoBillsRequestId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("FioranoBillsRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FioranoT24CardCreditRequest", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CommissionCode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CreditAccountNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CreditCurrency")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("DebitAcctNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DebitCurrency")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("JsonRequest")
                        .HasColumnType("NVARCHAR(950)");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(230)");

                    b.Property<string>("SessionId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionBranch")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("TrxnLocation")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("VtellerAppID")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("narrations")
                        .HasColumnType("NVARCHAR(530)");

                    b.HasKey("PaymentReference");

                    b.ToTable("FioranoT24CardCreditRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FioranoT24DeliveryDayRequest", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CommissionCode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CreditAccountNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CreditCurrency")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("DebitAcctNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DebitCurrency")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("JsonRequest")
                        .HasColumnType("NVARCHAR(950)");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(230)");

                    b.Property<string>("SessionId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionBranch")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("TrxnLocation")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("VtellerAppID")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("narrations")
                        .HasColumnType("NVARCHAR(530)");

                    b.HasKey("PaymentReference");

                    b.ToTable("FioranoT24DeliveryDayRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FioranoT24TransactionResponse", b =>
                {
                    b.Property<long>("FioranoT24TransactionResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Balance")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CHARGEAMT")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("COMMAMT")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("FTID")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("JsonResponse")
                        .HasColumnType("NVARCHAR(550)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ResponseCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("ResponseText")
                        .HasColumnType("NVARCHAR(280)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FioranoT24TransactionResponseId");

                    b.ToTable("FioranoT24TransactionResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.GuestAccountLog", b =>
                {
                    b.Property<long>("GuestAccountLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("GuestAccountLogId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("GuestAccountLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InterBankTransactionRequest", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("AccountLockID")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("AccountName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AppID")
                        .HasColumnType("int");

                    b.Property<string>("BeneficiaryBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BeneficiaryKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("BraCodeVal")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("ChannelCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CusNumVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationBankCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LedCodeVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("NESessionID")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("OriginatorAccountNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorBankVerificationNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OriginatorKYCLevel")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("OrignatorName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("PaymentRef")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("SubAcctVal")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("InterBankTransactionRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InvoicePaymentInfo", b =>
                {
                    b.Property<long>("InvoicePaymentInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("Fullname")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<long>("InvoicePaymentLinkId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(550)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("InvoicePaymentInfoId");

                    b.HasIndex("InvoicePaymentLinkId");

                    b.ToTable("InvoicePaymentInfo");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InvoicePaymentLink", b =>
                {
                    b.Property<long>("InvoicePaymentLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceName")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("Qty")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<bool>("TransactionStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoicePaymentLinkId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("InvoicePaymentLink");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InvoicePaymentLinkToMulitpleEmails", b =>
                {
                    b.Property<long>("InvoicePaymentLinkToMulitpleEmailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<long>("InvoicePaymentLinkId")
                        .HasColumnType("bigint");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoicePaymentLinkToMulitpleEmailsId");

                    b.HasIndex("InvoicePaymentLinkId");

                    b.ToTable("InvoicePaymentLinkToMulitpleEmails");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ItemAcceptedOrRejected", b =>
                {
                    b.Property<long>("ItemAcceptedOrRejectedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .HasColumnType("NVARCHAR(180)");

                    b.Property<long>("CustomerTransactionId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ProcessedBy")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<DateTime>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("ItemAcceptedOrRejectedId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("ItemAcceptedOrRejected");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LinkCategory", b =>
                {
                    b.Property<long>("LinkCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("LinkCategoryId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("LinkCategory");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LoanDailyDeductionLog", b =>
                {
                    b.Property<long>("LoanDailyDeductionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("AmountDeducted")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ApplyForLoanId")
                        .HasColumnType("bigint");

                    b.Property<string>("CommissionCode")
                        .HasColumnType("NVARCHAR(80)");

                    b.Property<string>("CreditAccountNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CreditCurrency")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebitAcctNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("DebitAmount")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("DebitCurrency")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("DebittNuban")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<long>("LoanDisbursementId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("OutstandingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RepaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SessionId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionBranch")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("TrxnLocation")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("VtellerAppID")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("message")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("narrations")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("LoanDailyDeductionLogId");

                    b.HasIndex("ApplyForLoanId");

                    b.ToTable("LoanDailyDeductionLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LoanDisbursement", b =>
                {
                    b.Property<long>("LoanDisbursementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ApplyForLoanId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HaveStartedRepayment")
                        .HasColumnType("bit");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("disbusedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("nuban")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("LoanDisbursementId");

                    b.HasIndex("ApplyForLoanId");

                    b.ToTable("LoanDisbursement");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LoanMonthlyDeductionLog", b =>
                {
                    b.Property<long>("LoanMonthlyDeductionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double>("AmountDeducted")
                        .HasColumnType("float");

                    b.Property<long>("ApplyForLoanId")
                        .HasColumnType("bigint");

                    b.Property<double>("DefaultBalance")
                        .HasColumnType("float");

                    b.Property<long>("LoanDisbursementId")
                        .HasColumnType("bigint");

                    b.Property<double>("RepaymentAmount")
                        .HasColumnType("float");

                    b.HasKey("LoanMonthlyDeductionLogId");

                    b.HasIndex("ApplyForLoanId");

                    b.ToTable("loanMonthlyDeductionLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LoanRepaymentPlan", b =>
                {
                    b.Property<long>("LoanRepaymentPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double>("DailySalesPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("PA")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("LoanRepaymentPlanId");

                    b.ToTable("LoanRepaymentPlan");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LoginAttemptHistory", b =>
                {
                    b.Property<long>("LoginAttemptHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.HasKey("LoginAttemptHistoryId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("LoginAttemptHistory");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantActivitySetup", b =>
                {
                    b.Property<long>("MerchantActivitySetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OutSideLagos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OutSideNigeria")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayOrchargeMe")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<bool>("ReceiveEmail")
                        .HasColumnType("bit");

                    b.Property<decimal>("WithinLagos")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MerchantActivitySetupId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantActivitySetup");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantBankInfo", b =>
                {
                    b.Property<long>("MerchantBankInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("AccountName")
                        .HasColumnType("NVARCHAR(65)");

                    b.Property<string>("BVN")
                        .HasColumnType("NVARCHAR(12)");

                    b.Property<string>("BankCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("BankName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Country")
                        .HasColumnType("NVARCHAR(25)");

                    b.Property<string>("Currency")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CusNum")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DefaultAccount")
                        .HasColumnType("bit");

                    b.Property<string>("KycLevel")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("LedCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("Nuban")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("MerchantBankInfoId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantBankInfo");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantBureauSearch", b =>
                {
                    b.Property<long>("MerchantBureauSearchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("isCustomerClean")
                        .HasColumnType("bit");

                    b.Property<string>("response")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MerchantBureauSearchId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantBureauSearch");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantBusinessInfo", b =>
                {
                    b.Property<long>("MerchantBusinessInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("BusinessEmail")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("BusinessName")
                        .HasColumnType("NVARCHAR(65)");

                    b.Property<string>("BusinessPhoneNumber")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Chargebackemail")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Country")
                        .HasColumnType("NVARCHAR(25)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileLocation")
                        .HasColumnType("NVARCHAR(190)");

                    b.Property<bool>("HasSpectaMerchantID")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("MerchantReferenceId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("SpectaMerchantID")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("SpectaMerchantKey")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("SpectaMerchantKeyValue")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("Tin")
                        .HasColumnType("NVARCHAR(40)");

                    b.HasKey("MerchantBusinessInfoId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantBusinessInfo");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantPaymentSetup", b =>
                {
                    b.Property<long>("MerchantPaymentSetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("AdditionalCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AdditionalDetails")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomUrl")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<decimal>("CustomerAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerDescription")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryMethod")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<long>("DeliveryTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Document")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("FileLocation")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<bool>("HasAdditionalCharges")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkCategory")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<decimal>("MerchantAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MerchantDescription")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<long>("MerchantStoreId")
                        .HasColumnType("bigint");

                    b.Property<string>("PaymentCategory")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("PaymentLinkName")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("PaymentLinkUrl")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<bool>("RedirectAfterPayment")
                        .HasColumnType("bit");

                    b.Property<decimal>("ShippingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("MerchantPaymentSetupId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantPaymentSetup");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantQRCodeOnboarding", b =>
                {
                    b.Property<long>("MerchantQRCodeOnboardingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Contact")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("Phone")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tin")
                        .HasColumnType("NVARCHAR(30)");

                    b.HasKey("MerchantQRCodeOnboardingId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantQRCodeOnboarding");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantQRCodeOnboardingResponse", b =>
                {
                    b.Property<long>("MerchantQRCodeOnboardingResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("JsonResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MchNo")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("MerchantAddress")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("MerchantContactName")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("MerchantEmail")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("MerchantName")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("MerchantPhoneNumber")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<long>("MerchantQRCodeOnboardingId")
                        .HasColumnType("bigint");

                    b.Property<string>("MerchantTIN")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("ReturnCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ReturnMsg")
                        .HasColumnType("NVARCHAR(150)");

                    b.HasKey("MerchantQRCodeOnboardingResponseId");

                    b.HasIndex("MerchantQRCodeOnboardingId");

                    b.ToTable("MerchantQRCodeOnboardingResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantStore", b =>
                {
                    b.Property<long>("MerchantStoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileLocation")
                        .HasColumnType("NVARCHAR(190)");

                    b.Property<string>("Image")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("StoreLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MerchantStoreId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantStore");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantStoreLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductOptionOptionId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreCategoryCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductOptionOptionId");

                    b.HasIndex("StoreCategoryCategoryId");

                    b.ToTable("MerchantStoreRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantTransactionSetup", b =>
                {
                    b.Property<long>("MerchantTransactionSetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pin")
                        .HasColumnType("NVARCHAR(355)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("MerchantTransactionSetupId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantTransactionSetup");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantWallet", b =>
                {
                    b.Property<long>("MerchantWalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoB")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("Firstname")
                        .HasColumnType("NVARCHAR(55)");

                    b.Property<string>("Gender")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .HasColumnType("NVARCHAR(55)");

                    b.Property<string>("Mobile")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("status")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("MerchantWalletId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("MerchantWallet");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.NonEscrowFioranoT24Request", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CommissionCode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("CreditAccountNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("CreditCurrency")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("DebitAcctNo")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DebitCurrency")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("JsonRequest")
                        .HasColumnType("NVARCHAR(980)");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("SessionId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionBranch")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("TrxnLocation")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("VtellerAppID")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("narrations")
                        .HasColumnType("NVARCHAR(530)");

                    b.HasKey("PaymentReference");

                    b.ToTable("NonEscrowFioranoT24Request");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.OnboardingNotiification", b =>
                {
                    b.Property<long>("OnboardingNotiificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("notificationType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OnboardingNotiificationId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("OnboardingNotiification");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.OtherMerchantBankInfo", b =>
                {
                    b.Property<long>("MerchantOtherBankInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("AccountName")
                        .HasColumnType("NVARCHAR(65)");

                    b.Property<string>("BVN")
                        .HasColumnType("NVARCHAR(12)");

                    b.Property<string>("BankCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("BankName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Country")
                        .HasColumnType("NVARCHAR(25)");

                    b.Property<string>("Currency")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CusNum")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DefaultAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("KycLevel")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("LedCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("Nuban")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("MerchantOtherBankInfoId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("OtherMerchantBankInfo");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.PaymentResponse", b =>
                {
                    b.Property<long>("PaymentResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(550)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("PaymentResponseId");

                    b.ToTable("PaymentResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.PinRequest", b =>
                {
                    b.Property<long>("PinRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pin")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TokenSecret")
                        .HasColumnType("NVARCHAR(350)");

                    b.HasKey("PinRequestId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("PinRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<long>("MerchantStoreId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Options")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("ClientAuthenticationId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<long>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductCategoryId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ProductInventory", b =>
                {
                    b.Property<long>("ProductInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductInventoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInventory");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ProductInventoryHistory", b =>
                {
                    b.Property<long>("ProductInventoryHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAdded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUpdated")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProdId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductInventoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("ProductInventoryHistoryId");

                    b.HasIndex("ProductInventoryId");

                    b.ToTable("productInventoryHistories");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ProductItems", b =>
                {
                    b.Property<long>("ProductItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductItemsId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductItems");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ProductOption", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OptionId");

                    b.ToTable("ProductOption");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.QrPaymentRequest", b =>
                {
                    b.Property<long>("QrPaymentRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("MchNo")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("OrderNo")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("OrderType")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("PaymentRequestReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("SubMchNo")
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("QrPaymentRequestId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("QrPaymentRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.QrPaymentResponse", b =>
                {
                    b.Property<long>("QrPaymentResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CodeUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderSn")
                        .HasColumnType("NVARCHAR(190)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("QrPaymentRequestId")
                        .HasColumnType("bigint");

                    b.Property<string>("ReturnCode")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ReturnMsg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QrPaymentResponseId");

                    b.HasIndex("QrPaymentRequestId");

                    b.ToTable("QrPaymentResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SendEmailVerificationCodeRequest", b =>
                {
                    b.Property<long>("SendEmailVerificationCodeRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("clientBaseUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailParameterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("verificationCodeParameterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SendEmailVerificationCodeRequestId");

                    b.ToTable("SendEmailVerificationCodeRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SendEmailVerificationCodeResponse", b =>
                {
                    b.Property<long>("SendEmailVerificationCodeResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("__abp")
                        .HasColumnType("bit");

                    b.Property<int>("code")
                        .HasColumnType("int");

                    b.Property<string>("details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<bool>("success")
                        .HasColumnType("bit");

                    b.Property<bool>("unAuthorizedRequest")
                        .HasColumnType("bit");

                    b.Property<string>("validationErrors")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SendEmailVerificationCodeResponseId");

                    b.ToTable("SendEmailVerificationCodeResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SingleDstvPayment", b =>
                {
                    b.Property<long>("SingleDstvPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("AccountLookupReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("amountInCents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("countryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchantReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vasId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SingleDstvPaymentId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("SingleDstvPayment");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SingleDstvPaymentResponse", b =>
                {
                    b.Property<long>("SingleDstvPaymentResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<long>("SingleDstvPaymentId")
                        .HasColumnType("bigint");

                    b.Property<string>("merchantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchantReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payUVasReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pointOfFailure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resultMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SingleDstvPaymentResponseId");

                    b.HasIndex("SingleDstvPaymentId");

                    b.ToTable("SingleDstvPaymentResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SpectaRegisterCustomerRequest", b =>
                {
                    b.Property<long>("SpectaRegisterCustomerRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationStatus")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("address")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("bvn")
                        .HasColumnType("NVARCHAR(11)");

                    b.Property<string>("captchaResponse")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("dob")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("emailAddress")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("name")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("password")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("stateOfResidence")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("surname")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("title")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("userName")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("SpectaRegisterCustomerRequestId");

                    b.ToTable("SpectaRegisterCustomerRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SpectaRegisterCustomerResponse", b =>
                {
                    b.Property<long>("SpectaRegisterCustomerResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<long>("SpectaRegisterCustomerRequestId")
                        .HasColumnType("bigint");

                    b.Property<bool>("__abp")
                        .HasColumnType("bit");

                    b.Property<int>("code")
                        .HasColumnType("int");

                    b.Property<string>("details")
                        .HasColumnType("NVARCHAR(290)");

                    b.Property<string>("message")
                        .HasColumnType("NVARCHAR(290)");

                    b.Property<bool>("success")
                        .HasColumnType("bit");

                    b.Property<bool>("unAuthorizedRequest")
                        .HasColumnType("bit");

                    b.Property<string>("validationErrors")
                        .HasColumnType("NVARCHAR(290)");

                    b.HasKey("SpectaRegisterCustomerResponseId");

                    b.HasIndex("SpectaRegisterCustomerRequestId");

                    b.ToTable("SpectaRegisterCustomerResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.StoreCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("StoreCategory");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.StoreTransactionLog", b =>
                {
                    b.Property<long>("StoreTransactionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("StoreTransactionLogId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("StoreTransactionLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.StoreTransactionLogDetails", b =>
                {
                    b.Property<long>("StoreTransactionLogDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("StoreTransactionLogId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("NVARCHAR(10)");

                    b.HasKey("StoreTransactionLogDetailsId");

                    b.HasIndex("StoreTransactionLogId");

                    b.ToTable("StoreTransactionLogDetails");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SubMerchantQRCodeOnboarding", b =>
                {
                    b.Property<long>("SubMerchantQRCodeOnboardingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MchNo")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("MerchantEmail")
                        .HasColumnType("NVARCHAR(80)");

                    b.Property<string>("MerchantName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("MerchantPhoneNumber")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<long>("MerchantQRCodeOnboardingId")
                        .HasColumnType("bigint");

                    b.Property<string>("SubAmount")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("SubFixed")
                        .HasColumnType("NVARCHAR(30)");

                    b.HasKey("SubMerchantQRCodeOnboardingId");

                    b.HasIndex("MerchantQRCodeOnboardingId");

                    b.ToTable("SubMerchantQRCodeOnboarding");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SubMerchantQRCodeOnboardingResponse", b =>
                {
                    b.Property<long>("SubMerchantQRCodeOnboardingResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JsonResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MchNo")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("MerchantName")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("QrCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnCode")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("ReturnMsg")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("SubMchNo")
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<long>("SubMerchantQRCodeOnboardingId")
                        .HasColumnType("bigint");

                    b.HasKey("SubMerchantQRCodeOnboardingResponseId");

                    b.HasIndex("SubMerchantQRCodeOnboardingId");

                    b.ToTable("SubMerchantQRCodeOnboardingResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.TenantProfile", b =>
                {
                    b.Property<long>("TenantProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(350)");

                    b.Property<string>("AuthKey")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TenantName")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("WebSiteUrl")
                        .HasColumnType("NVARCHAR(190)");

                    b.HasKey("TenantProfileId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("TenantProfile");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.TransactionLog", b =>
                {
                    b.Property<long>("TransactionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AcceptRejectLastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActivityStatus")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<decimal>("ActualAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<long>("CustomerInfo")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateNotified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryDayTransferStatus")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<DateTime>("DeliveryFinalDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompletedPayWithCard")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNotified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsQueuedPayWithCard")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWalletCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWalletQueued")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkCategory")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(550)");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("OtherPaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("PaymentChannel")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TransactionCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionJourney")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("NVARCHAR(5)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<DateTime>("WalletFundDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionLogId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("TransactionLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.UssdServiceRequestLog", b =>
                {
                    b.Property<long>("UssdServiceRequestLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CallBackResponseCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("CallBackResponseMessage")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("Channel")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Customer_mobile")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstitutionCode")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("LastDateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("MerchantID")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("MerchantName")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ResponseCode")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ResponseMessage")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("RetrievalReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ShortName")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("SubMerchantName")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TerminalId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TraceID")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransRef")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionID")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionRef")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("UserID")
                        .HasColumnType("NVARCHAR(40)");

                    b.HasKey("UssdServiceRequestLogId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("UssdServiceRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.VendAirtimeRequestLog", b =>
                {
                    b.Property<long>("VendAirtimeRequestLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paymentcode")
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("NVARCHAR(25)");

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.Property<string>("SubscriberInfo1")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TerminalID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<string>("Translocation")
                        .HasColumnType("NVARCHAR(55)");

                    b.Property<string>("email")
                        .HasColumnType("NVARCHAR(55)");

                    b.Property<string>("nuban")
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("VendAirtimeRequestLogId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("VendAirtimeRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.VerifyEmailConfirmationCodeRequest", b =>
                {
                    b.Property<long>("VerifyEmailConfirmationCodeRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VerifyEmailConfirmationCodeRequestId");

                    b.ToTable("VerifyEmailConfirmationCodeRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.VerifyEmailConfirmationCodeResponse", b =>
                {
                    b.Property<long>("VerifyEmailConfirmationCodeResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("__abp")
                        .HasColumnType("bit");

                    b.Property<int>("code")
                        .HasColumnType("int");

                    b.Property<string>("details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("success")
                        .HasColumnType("bit");

                    b.Property<bool>("unAuthorizedRequest")
                        .HasColumnType("bit");

                    b.Property<string>("validationErrors")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VerifyEmailConfirmationCodeResponseId");

                    b.ToTable("VerifyEmailConfirmationCodeResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.WalletTransferRequestLog", b =>
                {
                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("CURRENCYCODE")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerTransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<int>("TransferType")
                        .HasColumnType("int");

                    b.Property<decimal>("amt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("channelID")
                        .HasColumnType("int");

                    b.Property<string>("frmacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("remarks")
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<string>("toacct")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("PaymentReference");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("WalletTransferRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.WalletTransferResponse", b =>
                {
                    b.Property<long>("WalletTransferResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("PaymentReference")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("RequestId")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("message")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("response")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("responsedata")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<bool>("sent")
                        .HasColumnType("bit");

                    b.HasKey("WalletTransferResponseId");

                    b.ToTable("WalletTransferResponse");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.WebHookRequest", b =>
                {
                    b.Property<long>("WebHookRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ClientAuthenticationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("filters")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("headers")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("webHookUri")
                        .HasColumnType("NVARCHAR(250)");

                    b.HasKey("WebHookRequestId");

                    b.HasIndex("ClientAuthenticationId");

                    b.ToTable("WebHookRequest");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.WebHookTransactionRequestLog", b =>
                {
                    b.Property<long>("WebHookTransactionRequestLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("MerchantFee")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("MerchantName")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("MerchantNo")
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("NotificationType")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("OrderNo")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("OrderSn")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("ResidualAmount")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("Sign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubMerchantName")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("SubMerchantNo")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TimeStamp")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionAmount")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("TransactionTime")
                        .HasColumnType("NVARCHAR(90)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("NVARCHAR(90)");

                    b.HasKey("WebHookTransactionRequestLogId");

                    b.ToTable("WebHookTransactionRequestLog");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowFioranoT24Request", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", null)
                        .WithMany("AcceptedEscrowFioranoT24Request")
                        .HasForeignKey("ClientAuthenticationId");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowInterBankTransactionRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("AcceptedEscrowInterBankTransactionRequest")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AcceptedEscrowWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("AcceptedEscrowWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AccountHistory", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("AccountHistory")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.AccountResetRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("AccountResetRequest")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ApplyForLoan", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany()
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialPay.Domain.Entities.LoanRepaymentPlan", "LoanRepaymentPlan")
                        .WithMany("ApplyForLoan")
                        .HasForeignKey("LoanRepaymentPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.BindMerchant", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.MerchantQRCodeOnboarding", "MerchantQRCodeOnboarding")
                        .WithMany("BindMerchant")
                        .HasForeignKey("MerchantQRCodeOnboardingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.BindMerchantResponse", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.BindMerchant", "BindMerchant")
                        .WithMany("BindMerchantResponse")
                        .HasForeignKey("BindMerchantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CardTokenization", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("CardTokenization")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ClientLoginStatus", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("ClientLoginStatus")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CreateWalletResponse", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("CreateWalletResponse")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CreditMerchantWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("CreditMerchantWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CustomerOtherPaymentsInfo", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.MerchantPaymentSetup", "MerchantPaymentSetup")
                        .WithMany("CustomerOtherPaymentsInfo")
                        .HasForeignKey("MerchantPaymentSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.CustomerTransaction", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.MerchantPaymentSetup", "MerchantPaymentSetup")
                        .WithMany("CustomerTransaction")
                        .HasForeignKey("MerchantPaymentSetupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DebitMerchantWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("DebitMerchantWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeclinedWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("DeclinedWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DefaultWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("DefaultWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeliveryDayEscrowInterBankTransactionRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany()
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DeliveryDayWalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("DeliveryDayWalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DisputeRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("DisputeRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DstvAccountLookup", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("DstvAccountLookup")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.DstvAccountLookupResponse", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.DstvAccountLookup", "DstvAccountLookup")
                        .WithMany("DstvAccountLookupResponse")
                        .HasForeignKey("DstvAccountLookupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FioranoBillsPaymentResponse", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.FioranoBillsRequest", "FioranoBillsRequest")
                        .WithMany("FioranoBillsPaymentResponse")
                        .HasForeignKey("FioranoBillsRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.FioranoBillsRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("FioranoBillsRequest")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.GuestAccountLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("GuestAccountLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InterBankTransactionRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("InterBankTransactionRequest")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InvoicePaymentInfo", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.InvoicePaymentLink", "InvoicePaymentLink")
                        .WithMany("InvoicePaymentInfo")
                        .HasForeignKey("InvoicePaymentLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InvoicePaymentLink", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("InvoicePaymentLink")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.InvoicePaymentLinkToMulitpleEmails", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.InvoicePaymentLink", "InvoicePaymentLink")
                        .WithMany("InvoicePaymentLinkToMulitpleEmails")
                        .HasForeignKey("InvoicePaymentLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ItemAcceptedOrRejected", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("ItemAcceptedOrRejected")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LinkCategory", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("LinkCategory")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LoanDailyDeductionLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ApplyForLoan", "ApplyForLoan")
                        .WithMany("LoanDailyDeductionLog")
                        .HasForeignKey("ApplyForLoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LoanDisbursement", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ApplyForLoan", "ApplyForLoan")
                        .WithMany("LoanDisbursement")
                        .HasForeignKey("ApplyForLoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LoanMonthlyDeductionLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ApplyForLoan", "ApplyForLoan")
                        .WithMany("LoanMonthlyDeductionLog")
                        .HasForeignKey("ApplyForLoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.LoginAttemptHistory", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("LoginAttemptHistory")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantActivitySetup", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantActivitySetup")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantBankInfo", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantBankInfo")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantBureauSearch", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantBureauSearch")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantBusinessInfo", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantBusinessInfo")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantPaymentSetup", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantPaymentSetup")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantQRCodeOnboarding", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantQRCodeOnboarding")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantQRCodeOnboardingResponse", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.MerchantQRCodeOnboarding", "MerchantQRCodeOnboarding")
                        .WithMany("MerchantQRCodeOnboardingResponse")
                        .HasForeignKey("MerchantQRCodeOnboardingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantStore", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantStore")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantStoreLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ProductOption", "ProductOption")
                        .WithMany()
                        .HasForeignKey("ProductOptionOptionId");

                    b.HasOne("SocialPay.Domain.Entities.StoreCategory", "StoreCategory")
                        .WithMany()
                        .HasForeignKey("StoreCategoryCategoryId");
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantTransactionSetup", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantTransactionSetup")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.MerchantWallet", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("MerchantWallet")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.OnboardingNotiification", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany()
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.OtherMerchantBankInfo", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("OtherMerchantBankInfo")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.PinRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("PinRequest")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.Product", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", null)
                        .WithMany("Product")
                        .HasForeignKey("ClientAuthenticationId");

                    b.HasOne("SocialPay.Domain.Entities.ProductCategory", "ProductCategory")
                        .WithMany("Product")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("ProductCategory")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ProductInventory", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.Product", "Product")
                        .WithMany("ProductInventory")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ProductInventoryHistory", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ProductInventory", "ProductInventory")
                        .WithMany()
                        .HasForeignKey("ProductInventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.ProductItems", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.Product", "Product")
                        .WithMany("ProductItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.QrPaymentRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("QrPaymentRequest")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.QrPaymentResponse", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.QrPaymentRequest", "QrPaymentRequest")
                        .WithMany("QrPaymentResponse")
                        .HasForeignKey("QrPaymentRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SingleDstvPayment", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("SingleDstvPayment")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SingleDstvPaymentResponse", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.SingleDstvPayment", "SingleDstvPayment")
                        .WithMany("SingleDstvPaymentResponse")
                        .HasForeignKey("SingleDstvPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SpectaRegisterCustomerResponse", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.SpectaRegisterCustomerRequest", "SpectaRegisterCustomerRequest")
                        .WithMany("SpectaRegisterCustomerResponse")
                        .HasForeignKey("SpectaRegisterCustomerRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.StoreTransactionLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("StoreTransactionLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.StoreTransactionLogDetails", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.StoreTransactionLog", "StoreTransactionLog")
                        .WithMany("StoreTransactionLogDetails")
                        .HasForeignKey("StoreTransactionLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SubMerchantQRCodeOnboarding", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.MerchantQRCodeOnboarding", "MerchantQRCodeOnboarding")
                        .WithMany("SubMerchantQRCodeOnboarding")
                        .HasForeignKey("MerchantQRCodeOnboardingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.SubMerchantQRCodeOnboardingResponse", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.SubMerchantQRCodeOnboarding", "SubMerchantQRCodeOnboarding")
                        .WithMany("SubMerchantQRCodeOnboardingResponse")
                        .HasForeignKey("SubMerchantQRCodeOnboardingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.TenantProfile", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("TenantProfile")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.TransactionLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("TransactionLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.UssdServiceRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("UssdServiceRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.VendAirtimeRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("VendAirtimeRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.WalletTransferRequestLog", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("WalletTransferRequestLog")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SocialPay.Domain.Entities.WebHookRequest", b =>
                {
                    b.HasOne("SocialPay.Domain.Entities.ClientAuthentication", "ClientAuthentication")
                        .WithMany("WebHookRequest")
                        .HasForeignKey("ClientAuthenticationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
